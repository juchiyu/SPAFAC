[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"First Last. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Last F (2024). SPAFAC: Package (One Line, Title Case). R package version 0.0.0.9000.","code":"@Manual{,   title = {SPAFAC: What the Package Does (One Line, Title Case)},   author = {First Last},   year = {2024},   note = {R package version 0.0.0.9000}, }"},{"path":[]},{"path":"/reference/is_GSVD.html","id":null,"dir":"Reference","previous_headings":"","what":"is_GSVD — is_GSVD","title":"is_GSVD — is_GSVD","text":"Tests x object class type \"GSVD\"","code":""},{"path":"/reference/is_GSVD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"is_GSVD — is_GSVD","text":"","code":"is_GSVD(x)"},{"path":"/reference/is_GSVD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"is_GSVD — is_GSVD","text":"x object test","code":""},{"path":"/reference/is_GSVD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"is_GSVD — is_GSVD","text":"boolean. TRUE object class GSVD, FALSE otherwise.","code":""},{"path":"/reference/is_GSVD.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"is_GSVD — is_GSVD","text":"three primary functions GSVD package produce inherited (hierarchical) class structure type \"GSVD\". functions geigen, gsvd, gplssvd.","code":""},{"path":[]},{"path":"/reference/is_discriminant.html","id":null,"dir":"Reference","previous_headings":"","what":"is_discriminant — is_discriminant","title":"is_discriminant — is_discriminant","text":"Tests x object class type \"discriminant\"","code":""},{"path":"/reference/is_discriminant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"is_discriminant — is_discriminant","text":"","code":"is_discriminant(x)"},{"path":"/reference/is_discriminant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"is_discriminant — is_discriminant","text":"x object test","code":""},{"path":"/reference/is_discriminant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"is_discriminant — is_discriminant","text":"boolean. TRUE object class discriminant, FALSE otherwise.","code":""},{"path":"/reference/is_discriminant.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"is_discriminant — is_discriminant","text":"functions sGSVD package perform discriminant analysis. function sparseDiCA.","code":""},{"path":[]},{"path":"/reference/is_mca.html","id":null,"dir":"Reference","previous_headings":"","what":"is_mca — is_mca","title":"is_mca — is_mca","text":"Tests x object class type \"mca\"","code":""},{"path":"/reference/is_mca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"is_mca — is_mca","text":"","code":"is_mca(x)"},{"path":"/reference/is_mca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"is_mca — is_mca","text":"x object test","code":""},{"path":"/reference/is_mca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"is_mca — is_mca","text":"boolean. TRUE object class mca, FALSE otherwise.","code":""},{"path":[]},{"path":[]},{"path":"/reference/is_multitab.html","id":null,"dir":"Reference","previous_headings":"","what":"is_multitab — is_multitab","title":"is_multitab — is_multitab","text":"Tests x object class type \"MultiTab\"","code":""},{"path":"/reference/is_multitab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"is_multitab — is_multitab","text":"","code":"is_multitab(x)"},{"path":"/reference/is_multitab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"is_multitab — is_multitab","text":"x object test","code":""},{"path":"/reference/is_multitab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"is_multitab — is_multitab","text":"boolean. TRUE object class sGSVD, FALSE otherwise.","code":""},{"path":"/reference/is_multitab.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"is_multitab — is_multitab","text":"three primary functions sGSVD package produce inherited (hierarchical) class structure type \"spls\". functions sparsePLSC sparsePLSCA.","code":""},{"path":[]},{"path":"/reference/is_sEIGEN.html","id":null,"dir":"Reference","previous_headings":"","what":"is_sEIGEN — is_sEIGEN","title":"is_sEIGEN — is_sEIGEN","text":"Tests x object class type \"sEIGEN\"","code":""},{"path":"/reference/is_sEIGEN.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"is_sEIGEN — is_sEIGEN","text":"","code":"is_sEIGEN(x)"},{"path":"/reference/is_sEIGEN.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"is_sEIGEN — is_sEIGEN","text":"x object test","code":""},{"path":"/reference/is_sEIGEN.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"is_sEIGEN — is_sEIGEN","text":"boolean. TRUE object class sEIGEN, FALSE otherwise.","code":""},{"path":"/reference/is_sEIGEN.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"is_sEIGEN — is_sEIGEN","text":"functions sGSVD package analyzed sparse eigendecomposition sparseEIGEN. example, sparseMDS sparseDiSTATIS.","code":""},{"path":"/reference/is_sGEIGEN.html","id":null,"dir":"Reference","previous_headings":"","what":"is_sGEIGEN — is_sGEIGEN","title":"is_sGEIGEN — is_sGEIGEN","text":"Tests x object class type \"sGEIGEN\"","code":""},{"path":"/reference/is_sGEIGEN.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"is_sGEIGEN — is_sGEIGEN","text":"","code":"is_sGEIGEN(x)"},{"path":"/reference/is_sGEIGEN.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"is_sGEIGEN — is_sGEIGEN","text":"x object test","code":""},{"path":"/reference/is_sGEIGEN.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"is_sGEIGEN — is_sGEIGEN","text":"boolean. TRUE object class sGEIGEN, FALSE otherwise.","code":""},{"path":"/reference/is_sGEIGEN.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"is_sGEIGEN — is_sGEIGEN","text":"functions sGSVD package analyzed sparse generalized eigendecomposition sparseGEIGEN. example, sparseMDS sparseDiSTATIS.","code":""},{"path":"/reference/is_sGPCA.html","id":null,"dir":"Reference","previous_headings":"","what":"is_sGPCA — is_sGPCA","title":"is_sGPCA — is_sGPCA","text":"Tests x object class type \"sGPCA\"","code":""},{"path":"/reference/is_sGPCA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"is_sGPCA — is_sGPCA","text":"","code":"is_sGPCA(x)"},{"path":"/reference/is_sGPCA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"is_sGPCA — is_sGPCA","text":"x object test","code":""},{"path":"/reference/is_sGPCA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"is_sGPCA — is_sGPCA","text":"boolean. TRUE object class sPCA, FALSE otherwise.","code":""},{"path":"/reference/is_sGPCA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"is_sGPCA — is_sGPCA","text":"three primary functions sGPCA package produce inherited (hierarchical) class structure type \"sGPCA\". function sparseMFA.","code":""},{"path":[]},{"path":"/reference/is_sGSVD.html","id":null,"dir":"Reference","previous_headings":"","what":"is_sGSVD — is_sGSVD","title":"is_sGSVD — is_sGSVD","text":"Tests x object class type \"sGSVD\"","code":""},{"path":"/reference/is_sGSVD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"is_sGSVD — is_sGSVD","text":"","code":"is_sGSVD(x)"},{"path":"/reference/is_sGSVD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"is_sGSVD — is_sGSVD","text":"x object test","code":""},{"path":"/reference/is_sGSVD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"is_sGSVD — is_sGSVD","text":"boolean. TRUE object class sGSVD, FALSE otherwise.","code":""},{"path":"/reference/is_sGSVD.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"is_sGSVD — is_sGSVD","text":"three primary functions sGSVD package produce inherited (hierarchical) class structure type \"sGSVD\". functions sparseGSVD, sparseCA, sparseMCA, sparseMCA, sparseMFA, sparseDiCA, sPLSCA.","code":""},{"path":[]},{"path":"/reference/is_sMDS.html","id":null,"dir":"Reference","previous_headings":"","what":"is_sMDS — is_sMDS","title":"is_sMDS — is_sMDS","text":"Tests x object class type \"sMDS\"","code":""},{"path":"/reference/is_sMDS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"is_sMDS — is_sMDS","text":"","code":"is_sMDS(x)"},{"path":"/reference/is_sMDS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"is_sMDS — is_sMDS","text":"x object test","code":""},{"path":"/reference/is_sMDS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"is_sMDS — is_sMDS","text":"boolean. TRUE object class sMDS, FALSE otherwise.","code":""},{"path":"/reference/is_sMDS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"is_sMDS — is_sMDS","text":"functions sGSVD package analyzed sparse multidimensional scaling sparseMDS.","code":""},{"path":"/reference/is_sPLS.html","id":null,"dir":"Reference","previous_headings":"","what":"is_spls — is_sPLS","title":"is_spls — is_sPLS","text":"Tests x object class type \"sGSVD\"","code":""},{"path":"/reference/is_sPLS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"is_spls — is_sPLS","text":"","code":"is_sPLS(x)"},{"path":"/reference/is_sPLS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"is_spls — is_sPLS","text":"x object test","code":""},{"path":"/reference/is_sPLS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"is_spls — is_sPLS","text":"boolean. TRUE object class sGSVD, FALSE otherwise.","code":""},{"path":"/reference/is_sPLS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"is_spls — is_sPLS","text":"three primary functions sGSVD package produce inherited (hierarchical) class structure type \"spls\". functions sparsePLSC sparsePLSCA.","code":""},{"path":[]},{"path":"/reference/is_sSVD.html","id":null,"dir":"Reference","previous_headings":"","what":"is_sSVD — is_sSVD","title":"is_sSVD — is_sSVD","text":"Tests x object class type \"sSVD\"","code":""},{"path":"/reference/is_sSVD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"is_sSVD — is_sSVD","text":"","code":"is_sSVD(x)"},{"path":"/reference/is_sSVD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"is_sSVD — is_sSVD","text":"x object test","code":""},{"path":"/reference/is_sSVD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"is_sSVD — is_sSVD","text":"boolean. TRUE object class sGSVD, FALSE otherwise.","code":""},{"path":"/reference/is_sSVD.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"is_sSVD — is_sSVD","text":"three primary functions sGSVD package produce inherited (hierarchical) class structure type \"sSVD\". functions sparseSVD sparsePLSC.","code":""},{"path":[]},{"path":"/reference/is_sca.html","id":null,"dir":"Reference","previous_headings":"","what":"is_sca — is_sca","title":"is_sca — is_sca","text":"Tests x object class type \"sca\"","code":""},{"path":"/reference/is_sca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"is_sca — is_sca","text":"","code":"is_sca(x)"},{"path":"/reference/is_sca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"is_sca — is_sca","text":"x object test","code":""},{"path":"/reference/is_sca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"is_sca — is_sca","text":"boolean. TRUE object class sca, FALSE otherwise.","code":""},{"path":"/reference/is_sca.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"is_sca — is_sca","text":"functions sGSVD package perform discriminant simple correspondence analysis. function sparseDiSCA.","code":""},{"path":[]},{"path":"/reference/sparseCA.html","id":null,"dir":"Reference","previous_headings":"","what":"Group sparse Correspondence Analysis — sparseCA","title":"Group sparse Correspondence Analysis — sparseCA","text":"Group sparse Correspondence Analysis","code":""},{"path":"/reference/sparseCA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group sparse Correspondence Analysis — sparseCA","text":"","code":"sparseCA(   DATA,   components = 0,   tol = .Machine$double.eps,   doublecentering = TRUE,   init = \"svd\",   initLeft = NULL,   initRight = NULL,   seed = NULL,   rdsLeft = rep(1, components),   rdsRight = rep(1, components),   grpLeft = NULL,   grpRight = NULL,   orthogonality = \"loadings\",   OrthSpaceLeft = NULL,   OrthSpaceRight = NULL,   projPriority = \"orth\",   projPriorityLeft = projPriority,   projPriorityRight = projPriority,   itermaxALS = 1000,   itermaxPOCS = 1000,   epsALS = 1e-10,   epsPOCS = 1e-10 )"},{"path":"/reference/sparseCA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group sparse Correspondence Analysis — sparseCA","text":"DATA contingency table epsPOCS  k number dimensions","code":""},{"path":"/reference/sparseDiCA.html","id":null,"dir":"Reference","previous_headings":"","what":"Group sparse Discriminant Correspondence Analysis — sparseDiCA","title":"Group sparse Discriminant Correspondence Analysis — sparseDiCA","text":"Group sparse Discriminant Correspondence Analysis","code":""},{"path":"/reference/sparseDiCA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group sparse Discriminant Correspondence Analysis — sparseDiCA","text":"","code":"sparseDiCA(   DATA,   design,   ca.type = \"mca\",   components = 0,   tol = .Machine$double.eps,   make_data_nominal = TRUE,   make_design_nominal = TRUE,   doublecentering = TRUE,   init = \"svd\",   initLeft = NULL,   initRight = NULL,   seed = NULL,   rdsLeft = rep(1, components),   rdsRight = rep(1, components),   grpLeft = NULL,   grpRight = NULL,   orthogonality = \"loadings\",   OrthSpaceLeft = NULL,   OrthSpaceRight = NULL,   projPriority = \"orth\",   projPriorityLeft = projPriority,   projPriorityRight = projPriority,   itermaxALS = 1000,   itermaxPOCS = 1000,   epsALS = 1e-10,   epsPOCS = 1e-10 )"},{"path":"/reference/sparseDiCA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group sparse Discriminant Correspondence Analysis — sparseDiCA","text":"DATA contingency table design design vector observations (.e., rows) DATA components  make_data_nominal (TRUE FALSE) grpLeft grouping vector rows grpRight grouping vector columns","code":""},{"path":"/reference/sparseDiMCA.html","id":null,"dir":"Reference","previous_headings":"","what":"Group sparse Discriminant Correspondence Analysis for MCA — sparseDiMCA","title":"Group sparse Discriminant Correspondence Analysis for MCA — sparseDiMCA","text":"Group sparse Discriminant Correspondence Analysis MCA","code":""},{"path":"/reference/sparseDiMCA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group sparse Discriminant Correspondence Analysis for MCA — sparseDiMCA","text":"","code":"sparseDiMCA(   DATA,   design,   components = 0,   tol = .Machine$double.eps,   make_data_nominal = TRUE,   make_design_nominal = TRUE,   doublecentering = TRUE,   init = \"svd\",   initLeft = NULL,   initRight = NULL,   seed = NULL,   rdsLeft = rep(1, components),   rdsRight = rep(1, components),   grpLeft = NULL,   grpRight = NULL,   orthogonality = \"loadings\",   OrthSpaceLeft = NULL,   OrthSpaceRight = NULL,   projPriority = \"orth\",   projPriorityLeft = projPriority,   projPriorityRight = projPriority,   itermaxALS = 1000,   itermaxPOCS = 1000,   epsALS = 1e-10,   epsPOCS = 1e-10 )"},{"path":"/reference/sparseDiMCA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group sparse Discriminant Correspondence Analysis for MCA — sparseDiMCA","text":"epsPOCS","code":""},{"path":"/reference/sparseDiSCA.html","id":null,"dir":"Reference","previous_headings":"","what":"Group sparse Discriminant Correspondence Analysis for simple CA — sparseDiSCA","title":"Group sparse Discriminant Correspondence Analysis for simple CA — sparseDiSCA","text":"Group sparse Discriminant Correspondence Analysis simple CA","code":""},{"path":"/reference/sparseDiSCA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group sparse Discriminant Correspondence Analysis for simple CA — sparseDiSCA","text":"","code":"sparseDiSCA(   DATA,   design,   components = 0,   tol = .Machine$double.eps,   make_design_nominal = TRUE,   doublecentering = TRUE,   init = \"svd\",   initLeft = NULL,   initRight = NULL,   seed = NULL,   rdsLeft = rep(1, components),   rdsRight = rep(1, components),   grpLeft = NULL,   grpRight = NULL,   orthogonality = \"loadings\",   OrthSpaceLeft = NULL,   OrthSpaceRight = NULL,   projPriority = \"orth\",   projPriorityLeft = projPriority,   projPriorityRight = projPriority,   itermaxALS = 1000,   itermaxPOCS = 1000,   epsALS = 1e-10,   epsPOCS = 1e-10 )"},{"path":"/reference/sparseDiSCA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group sparse Discriminant Correspondence Analysis for simple CA — sparseDiSCA","text":"epsPOCS","code":""},{"path":"/reference/sparseDiSTATIS.html","id":null,"dir":"Reference","previous_headings":"","what":"Sparse DiSTATIS — sparseDiSTATIS","title":"Sparse DiSTATIS — sparseDiSTATIS","text":"Sparse DiSTATIS","code":""},{"path":"/reference/sparseDiSTATIS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sparse DiSTATIS — sparseDiSTATIS","text":"","code":"sparseDiSTATIS(   DATA,   method = \"distance\",   Cmat.is.RV = TRUE,   masses.Cmat = NULL,   masses.Splus = NULL,   sparse.Cmat = FALSE,   sparse.Splus = TRUE,   components.Cmat = 0,   components.Splus = 0,   init.Cmat = \"svd\",   init.Splus = \"svd\",   seed = NULL,   grp.Cmat = NULL,   grp.Splus = NULL,   rds.Cmat = rep(1, components.Cmat),   rds.Splus = rep(1, components.Splus),   orthogonality.Cmat = \"loadings\",   OrthSpace.Cmat = NULL,   orthogonality.Splus = \"loadings\",   OrthSpace.Splus = NULL,   projPriority.Cmat = \"orth\",   projPriority.Splus = \"orth\",   itermaxALS.Cmat = 1000,   itermaxPOCS.Cmat = 1000,   itermaxALS.Splus = 1000,   itermaxPOCS.Splus = 1000,   epsALS.Cmat = 1e-10,   epsPOCS.Cmat = 1e-10,   epsALS.Splus = 1e-10,   epsPOCS.Splus = 1e-10,   tol = .Machine$double.eps )"},{"path":"/reference/sparseDiSTATIS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sparse DiSTATIS — sparseDiSTATIS","text":"DATA cube distance matrix method \"distance\" \"covariance\" masses.Cmat vector masses rows/columns rv matric. Default set \"NULL\" 1s. masses.Splus vector masses rows/columns table cube. Default set \"NULL\" equal masses 1/(number rows) used. tol","code":""},{"path":"/reference/sparseMCA.html","id":null,"dir":"Reference","previous_headings":"","what":"Group sparse Multiple Correspondence Analysis — sparseMCA","title":"Group sparse Multiple Correspondence Analysis — sparseMCA","text":"Group sparse Multiple Correspondence Analysis","code":""},{"path":"/reference/sparseMCA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group sparse Multiple Correspondence Analysis — sparseMCA","text":"","code":"sparseMCA(   DATA,   components = 0,   tol = .Machine$double.eps,   make_data_nominal = TRUE,   doublecentering = TRUE,   init = \"svd\",   initLeft = NULL,   initRight = NULL,   seed = NULL,   rdsLeft = rep(1, components),   rdsRight = rep(1, components),   grpLeft = NULL,   grpRight = NULL,   orthogonality = \"loadings\",   OrthSpaceLeft = NULL,   OrthSpaceRight = NULL,   projPriority = \"orth\",   projPriorityLeft = projPriority,   projPriorityRight = projPriority,   correction4SI = \"mca\",   itermaxALS = 1000,   itermaxPOCS = 1000,   epsALS = 1e-10,   epsPOCS = 1e-10 )"},{"path":"/reference/sparseMCA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group sparse Multiple Correspondence Analysis — sparseMCA","text":"DATA contingency table grpLeft grouping vector rows grpRight grouping vector columns correction4SI","code":""},{"path":"/reference/sparseMDS.html","id":null,"dir":"Reference","previous_headings":"","what":"Sparse Multidimensional Scaling — sparseMDS","title":"Sparse Multidimensional Scaling — sparseMDS","text":"Sparse Multidimensional Scaling","code":""},{"path":"/reference/sparseMDS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sparse Multidimensional Scaling — sparseMDS","text":"","code":"sparseMDS(   DATA,   masses = NULL,   components = 0,   tol = .Machine$double.eps,   method = \"distance\",   init = \"svd\",   seed = NULL,   grp = NULL,   rds = rep(1, components),   orthogonality = \"loadings\",   OrthSpace = NULL,   projPriority = \"orth\",   itermaxALS = 1000,   itermaxPOCS = 1000,   epsALS = 1e-10,   epsPOCS = 1e-10 )"},{"path":"/reference/sparseMDS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sparse Multidimensional Scaling — sparseMDS","text":"masses vector masses rows/columns. Default set \"NULL\" equal masses 1/(number rows) used. method \"distance\" \"covariance\" OrthSpace","code":""},{"path":"/reference/sparseMFA.html","id":null,"dir":"Reference","previous_headings":"","what":"sparse Multiple Factor Analysis — sparseMFA","title":"sparse Multiple Factor Analysis — sparseMFA","text":"sparse Multiple Factor Analysis","code":""},{"path":"/reference/sparseMFA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sparse Multiple Factor Analysis — sparseMFA","text":"","code":"sparseMFA(   X,   column.design,   components = 0,   sparseOption = \"variable\",   center = TRUE,   scale = TRUE,   mfa.scale = TRUE,   tol = .Machine$double.eps,   init = \"svd\",   initLeft = NULL,   initRight = NULL,   seed = NULL,   rdsLeft = rep(1, components),   rdsRight = rep(1, components),   grpLeft = NULL,   grpRight = NULL,   orthogonality = \"loadings\",   OrthSpaceLeft = NULL,   OrthSpaceRight = NULL,   projPriority = \"orth\",   projPriorityLeft = projPriority,   projPriorityRight = projPriority,   itermaxALS = 1000,   itermaxPOCS = 1000,   epsALS = 1e-10,   epsPOCS = 1e-10 )"},{"path":"/reference/sparseMFA.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"sparse Multiple Factor Analysis — sparseMFA","text":"lines function inspired MExPosition package Derek Beaton Cherise Chin Fatt.","code":""},{"path":"/reference/sparseMFA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sparse Multiple Factor Analysis — sparseMFA","text":"X Data matrix rows J columns components number dimensions extract sparseOption \"variable\" \"subtable\" center X matrix: parameter pass center scale function; either logical value numeric-alike vector length equal number columns X. scale X matrix: parameter pass scale scale function; either logical value numeric-alike vector length equal number columns X. tol default .Machine$double.eps. parameter pass gplssvd; eliminates singular values effectively zero (thus drops null components). epsPOCS","code":""},{"path":"/reference/sparsePLSC.html","id":null,"dir":"Reference","previous_headings":"","what":"sparse Partial Least Square Correlation — sparsePLSC","title":"sparse Partial Least Square Correlation — sparsePLSC","text":"sparse Partial Least Square Correlation","code":""},{"path":"/reference/sparsePLSC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sparse Partial Least Square Correlation — sparsePLSC","text":"","code":"sparsePLSC(   X,   Y,   components = 0,   center_X = TRUE,   center_Y = TRUE,   scale_X = TRUE,   scale_Y = TRUE,   tol = .Machine$double.eps,   init = \"svd\",   initLeft = NULL,   initRight = NULL,   seed = NULL,   rdsLeft = rep(1, components),   rdsRight = rep(1, components),   grpLeft = NULL,   grpRight = NULL,   orthogonality = \"both\",   OrthSpaceLeft = NULL,   OrthSpaceRight = NULL,   projPriority = \"orth\",   projPriorityLeft = projPriority,   projPriorityRight = projPriority,   itermaxALS = 1000,   itermaxPOCS = 1000,   epsALS = 1e-10,   epsPOCS = 1e-10 )"},{"path":"/reference/sparsePLSC.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"sparse Partial Least Square Correlation — sparsePLSC","text":"arguments function inspired GPLS package Derek Beaton.","code":""},{"path":"/reference/sparsePLSC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sparse Partial Least Square Correlation — sparsePLSC","text":"X Data matrix rows J columns Y Data matrix rows K columns components number dimensions extract center_X X matrix: parameter pass center scale function; either logical value numeric-alike vector length equal number columns X. center_Y Y matrix: parameter pass center scale function; either logical value numeric-alike vector length equal number columns Y. scale_X X matrix: parameter pass scale scale function; either logical value numeric-alike vector length equal number columns X. scale_Y Y matrix: parameter pass scale scale function; either logical value numeric-alike vector length equal number columns Y. tol default .Machine$double.eps. parameter pass gplssvd; eliminates singular values effectively zero (thus drops null components). epsPOCS","code":""},{"path":"/reference/sparsePLSCA.html","id":null,"dir":"Reference","previous_headings":"","what":"sparse Partial Least Square Correspondence anlaysis — sparsePLSCA","title":"sparse Partial Least Square Correspondence anlaysis — sparsePLSCA","text":"sparse Partial Least Square Correspondence anlaysis","code":""},{"path":"/reference/sparsePLSCA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sparse Partial Least Square Correspondence anlaysis — sparsePLSCA","text":"","code":"sparsePLSCA(   X,   Y,   Mx = NULL,   My = NULL,   Wx = NULL,   Wy = NULL,   components = 2L,   tol = .Machine$double.eps,   doublecentering_X = TRUE,   doublecentering_Y = TRUE,   init = \"svd\",   initLeft = NULL,   initRight = NULL,   seed = NULL,   rdsLeft = rep(1, components),   rdsRight = rep(1, components),   grpLeft = NULL,   grpRight = NULL,   orthogonality = \"both\",   OrthSpaceLeft = NULL,   OrthSpaceRight = NULL,   projPriority = \"orth\",   projPriorityLeft = projPriority,   projPriorityRight = projPriority,   itermaxALS = 1000,   itermaxPOCS = 1000,   epsALS = 1e-10,   epsPOCS = 1e-10 )"},{"path":"/reference/sparsePLSCA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sparse Partial Least Square Correspondence anlaysis — sparsePLSCA","text":"epsPOCS  DATA contingency table k number dimensions","code":""},{"path":"/reference/sparseSTATIS.html","id":null,"dir":"Reference","previous_headings":"","what":"sparse STATIS — sparseSTATIS","title":"sparse STATIS — sparseSTATIS","text":"sparse STATIS","code":""},{"path":"/reference/sparseSTATIS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sparse STATIS — sparseSTATIS","text":"","code":"sparseSTATIS(   X,   column.design,   mfa.normalize = TRUE,   sparse.Cmat = FALSE,   sparse.grandX = TRUE,   components.Cmat = 0,   components.grandX = 0,   sparseOption = \"variable\",   center = TRUE,   scale = TRUE,   tol = .Machine$double.eps,   init.Cmat = \"eig\",   init.grandX = \"svd\",   initLeft.grandX = NULL,   initRight.grandX = NULL,   seed = NULL,   rdsLeft.Cmat = rep(1, components.Cmat),   rdsRight.Cmat = rep(1, components.Cmat),   rdsLeft.grandX = rep(1, components.grandX),   rdsRight.grandX = rep(1, components.grandX),   grp.Cmat = NULL,   grpLeft.grandX = NULL,   grpRight.grandX = NULL,   orthogonality.Cmat = \"loadings\",   OrthSpaceLeft.Cmat = NULL,   OrthSpaceRight.Cmat = NULL,   orthogonality.grandX = \"loadings\",   OrthSpaceLeft.grandX = NULL,   OrthSpaceRight.grandX = NULL,   projPriority.Cmat = \"orth\",   projPriorityLeft.Cmat = projPriority.Cmat,   projPriorityRight.Cmat = projPriority.Cmat,   projPriority.grandX = \"orth\",   projPriorityLeft.grandX = projPriority.grandX,   projPriorityRight.Slus = projPriority.grandX,   itermaxALS.Cmat = 1000,   itermaxPOCS.Cmat = 1000,   itermaxALS.grandX = 1000,   itermaxPOCS.grandX = 1000,   epsALS.Cmat = 1e-10,   epsPOCS.Cmat = 1e-10,   epsALS.grandX = 1e-10,   epsPOCS.grandX = 1e-10 )"},{"path":"/reference/sparseSTATIS.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"sparse STATIS — sparseSTATIS","text":"lines function inspired MExPosition package Derek Beaton Cherise Chin Fatt.","code":""},{"path":"/reference/sparseSTATIS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sparse STATIS — sparseSTATIS","text":"X Data matrix rows J columns mfa.normalize TRUE (default) FALSE. sparse.Cmat TRUE FALSE (default). C matrix (e.g., RV matrix) sparsified obtain weights. components.Cmat number dimensions extract C matrix (e.g., RV matrix). sparseOption \"variable\" \"subtable\" center X matrix: parameter pass center scale function; either logical value numeric-alike vector length equal number columns X. scale X matrix: parameter pass scale scale function; either logical value numeric-alike vector length equal number columns X. tol default .Machine$double.eps. parameter pass gplssvd; eliminates singular values effectively zero (thus drops null components). sparse.Splus TRUE (default) FALSE. compromise sparsified. components.Splus number dimensions extract compromise. epsPOCS.Splus","code":""},{"path":"/reference/tab_disjonctif.html","id":null,"dir":"Reference","previous_headings":"","what":"Disjonctif table — tab_disjonctif","title":"Disjonctif table — tab_disjonctif","text":"Disjonctif table","code":""},{"path":"/reference/tab_disjonctif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Disjonctif table — tab_disjonctif","text":"","code":"tab_disjonctif(X)"},{"path":"/reference/tab_disjonctif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Disjonctif table — tab_disjonctif","text":"X data frame matrix factors","code":""},{"path":"/reference/tab_disjonctif.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Disjonctif table — tab_disjonctif","text":"Returns disjonctif table","code":""},{"path":"/reference/tab_disjonctif.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Disjonctif table — tab_disjonctif","text":"","code":"library(FactoMineR) data(tea) tea <- tea [, 1:8]  tab_disjonctif(tea) #>        breakfast.Not.breakfast breakfast.breakfast tea.time.Not.tea time #>   [1,]                       0                   1                     1 #>   [2,]                       0                   1                     1 #>   [3,]                       1                   0                     0 #>   [4,]                       1                   0                     1 #>   [5,]                       0                   1                     1 #>   [6,]                       1                   0                     1 #>   [7,]                       0                   1                     0 #>   [8,]                       1                   0                     0 #>   [9,]                       0                   1                     0 #>  [10,]                       0                   1                     1 #>  [11,]                       1                   0                     1 #>  [12,]                       0                   1                     1 #>  [13,]                       0                   1                     0 #>  [14,]                       0                   1                     1 #>  [15,]                       0                   1                     1 #>  [16,]                       0                   1                     0 #>  [17,]                       0                   1                     0 #>  [18,]                       0                   1                     0 #>  [19,]                       0                   1                     0 #>  [20,]                       1                   0                     0 #>  [21,]                       1                   0                     0 #>  [22,]                       0                   1                     1 #>  [23,]                       1                   0                     0 #>  [24,]                       0                   1                     1 #>  [25,]                       1                   0                     1 #>  [26,]                       0                   1                     1 #>  [27,]                       0                   1                     0 #>  [28,]                       0                   1                     0 #>  [29,]                       1                   0                     0 #>  [30,]                       0                   1                     0 #>  [31,]                       1                   0                     1 #>  [32,]                       0                   1                     0 #>  [33,]                       1                   0                     0 #>  [34,]                       1                   0                     0 #>  [35,]                       1                   0                     0 #>  [36,]                       0                   1                     1 #>  [37,]                       0                   1                     0 #>  [38,]                       0                   1                     1 #>  [39,]                       1                   0                     1 #>  [40,]                       1                   0                     0 #>  [41,]                       0                   1                     0 #>  [42,]                       0                   1                     0 #>  [43,]                       1                   0                     0 #>  [44,]                       0                   1                     0 #>  [45,]                       1                   0                     1 #>  [46,]                       0                   1                     0 #>  [47,]                       1                   0                     1 #>  [48,]                       1                   0                     1 #>  [49,]                       0                   1                     0 #>  [50,]                       0                   1                     0 #>  [51,]                       0                   1                     0 #>  [52,]                       1                   0                     0 #>  [53,]                       1                   0                     0 #>  [54,]                       1                   0                     0 #>  [55,]                       1                   0                     1 #>  [56,]                       1                   0                     0 #>  [57,]                       0                   1                     0 #>  [58,]                       0                   1                     1 #>  [59,]                       1                   0                     0 #>  [60,]                       0                   1                     0 #>  [61,]                       0                   1                     0 #>  [62,]                       0                   1                     0 #>        tea.time.tea time evening.Not.evening evening.evening lunch.Not.lunch #>   [1,]                 0                   1               0               1 #>   [2,]                 0                   1               0               1 #>   [3,]                 1                   0               1               1 #>   [4,]                 0                   1               0               1 #>   [5,]                 0                   0               1               1 #>   [6,]                 0                   1               0               1 #>   [7,]                 1                   1               0               1 #>   [8,]                 1                   0               1               1 #>   [9,]                 1                   1               0               1 #>  [10,]                 0                   0               1               1 #>  [11,]                 0                   0               1               1 #>  [12,]                 0                   0               1               1 #>  [13,]                 1                   1               0               1 #>  [14,]                 0                   1               0               1 #>  [15,]                 0                   1               0               1 #>  [16,]                 1                   1               0               1 #>  [17,]                 1                   0               1               1 #>  [18,]                 1                   1               0               1 #>  [19,]                 1                   0               1               0 #>  [20,]                 1                   1               0               0 #>  [21,]                 1                   1               0               1 #>  [22,]                 0                   1               0               1 #>  [23,]                 1                   1               0               1 #>  [24,]                 0                   1               0               1 #>  [25,]                 0                   1               0               1 #>  [26,]                 0                   0               1               1 #>  [27,]                 1                   1               0               1 #>  [28,]                 1                   0               1               0 #>  [29,]                 1                   1               0               1 #>  [30,]                 1                   1               0               1 #>  [31,]                 0                   1               0               1 #>  [32,]                 1                   1               0               1 #>  [33,]                 1                   1               0               1 #>  [34,]                 1                   1               0               1 #>  [35,]                 1                   0               1               1 #>  [36,]                 0                   1               0               1 #>  [37,]                 1                   1               0               1 #>  [38,]                 0                   1               0               1 #>  [39,]                 0                   1               0               1 #>  [40,]                 1                   1               0               1 #>  [41,]                 1                   1               0               0 #>  [42,]                 1                   1               0               1 #>  [43,]                 1                   1               0               1 #>  [44,]                 1                   1               0               1 #>  [45,]                 0                   0               1               1 #>  [46,]                 1                   1               0               1 #>  [47,]                 0                   0               1               1 #>  [48,]                 0                   1               0               1 #>  [49,]                 1                   1               0               1 #>  [50,]                 1                   1               0               1 #>  [51,]                 1                   1               0               1 #>  [52,]                 1                   0               1               1 #>  [53,]                 1                   1               0               1 #>  [54,]                 1                   0               1               1 #>  [55,]                 0                   0               1               1 #>  [56,]                 1                   0               1               1 #>  [57,]                 1                   1               0               1 #>  [58,]                 0                   0               1               1 #>  [59,]                 1                   1               0               0 #>  [60,]                 1                   1               0               0 #>  [61,]                 1                   1               0               0 #>  [62,]                 1                   0               1               0 #>        lunch.lunch dinner.Not.dinner dinner.dinner always.Not.always #>   [1,]           0                 1             0                 1 #>   [2,]           0                 1             0                 1 #>   [3,]           0                 0             1                 1 #>   [4,]           0                 0             1                 1 #>   [5,]           0                 1             0                 0 #>   [6,]           0                 0             1                 1 #>   [7,]           0                 1             0                 1 #>   [8,]           0                 1             0                 1 #>   [9,]           0                 1             0                 1 #>  [10,]           0                 1             0                 1 #>  [11,]           0                 1             0                 1 #>  [12,]           0                 1             0                 1 #>  [13,]           0                 1             0                 1 #>  [14,]           0                 1             0                 1 #>  [15,]           0                 1             0                 1 #>  [16,]           0                 1             0                 1 #>  [17,]           0                 1             0                 1 #>  [18,]           0                 1             0                 1 #>  [19,]           1                 1             0                 1 #>  [20,]           1                 1             0                 1 #>  [21,]           0                 1             0                 1 #>  [22,]           0                 1             0                 1 #>  [23,]           0                 1             0                 1 #>  [24,]           0                 1             0                 1 #>  [25,]           0                 1             0                 0 #>  [26,]           0                 1             0                 0 #>  [27,]           0                 1             0                 1 #>  [28,]           1                 1             0                 1 #>  [29,]           0                 1             0                 1 #>  [30,]           0                 1             0                 1 #>  [31,]           0                 1             0                 0 #>  [32,]           0                 1             0                 1 #>  [33,]           0                 1             0                 1 #>  [34,]           0                 1             0                 1 #>  [35,]           0                 1             0                 0 #>  [36,]           0                 1             0                 1 #>  [37,]           0                 1             0                 1 #>  [38,]           0                 1             0                 1 #>  [39,]           0                 1             0                 0 #>  [40,]           0                 1             0                 1 #>  [41,]           1                 1             0                 1 #>  [42,]           0                 1             0                 1 #>  [43,]           0                 1             0                 1 #>  [44,]           0                 1             0                 1 #>  [45,]           0                 1             0                 1 #>  [46,]           0                 1             0                 0 #>  [47,]           0                 0             1                 1 #>  [48,]           0                 1             0                 0 #>  [49,]           0                 1             0                 1 #>  [50,]           0                 1             0                 1 #>  [51,]           0                 1             0                 1 #>  [52,]           0                 1             0                 0 #>  [53,]           0                 1             0                 1 #>  [54,]           0                 0             1                 1 #>  [55,]           0                 1             0                 0 #>  [56,]           0                 1             0                 0 #>  [57,]           0                 1             0                 1 #>  [58,]           0                 1             0                 1 #>  [59,]           1                 1             0                 1 #>  [60,]           1                 1             0                 1 #>  [61,]           1                 1             0                 1 #>  [62,]           1                 1             0                 0 #>        always.always home.Not.home home.home work.Not.work work.work #>   [1,]             0             0         1             1         0 #>   [2,]             0             0         1             1         0 #>   [3,]             0             0         1             0         1 #>   [4,]             0             0         1             1         0 #>   [5,]             1             0         1             1         0 #>   [6,]             0             0         1             1         0 #>   [7,]             0             0         1             1         0 #>   [8,]             0             0         1             1         0 #>   [9,]             0             0         1             1         0 #>  [10,]             0             0         1             1         0 #>  [11,]             0             0         1             1         0 #>  [12,]             0             0         1             1         0 #>  [13,]             0             0         1             1         0 #>  [14,]             0             0         1             1         0 #>  [15,]             0             0         1             1         0 #>  [16,]             0             0         1             1         0 #>  [17,]             0             0         1             0         1 #>  [18,]             0             0         1             1         0 #>  [19,]             0             0         1             1         0 #>  [20,]             0             0         1             1         0 #>  [21,]             0             0         1             1         0 #>  [22,]             0             0         1             1         0 #>  [23,]             0             1         0             0         1 #>  [24,]             0             0         1             1         0 #>  [25,]             1             0         1             1         0 #>  [26,]             1             0         1             0         1 #>  [27,]             0             0         1             1         0 #>  [28,]             0             0         1             0         1 #>  [29,]             0             0         1             1         0 #>  [30,]             0             0         1             1         0 #>  [31,]             1             0         1             1         0 #>  [32,]             0             0         1             1         0 #>  [33,]             0             0         1             0         1 #>  [34,]             0             0         1             1         0 #>  [35,]             1             0         1             1         0 #>  [36,]             0             0         1             1         0 #>  [37,]             0             0         1             1         0 #>  [38,]             0             0         1             1         0 #>  [39,]             1             0         1             0         1 #>  [40,]             0             0         1             1         0 #>  [41,]             0             0         1             1         0 #>  [42,]             0             0         1             0         1 #>  [43,]             0             0         1             1         0 #>  [44,]             0             0         1             1         0 #>  [45,]             0             0         1             1         0 #>  [46,]             1             0         1             0         1 #>  [47,]             0             0         1             1         0 #>  [48,]             1             0         1             1         0 #>  [49,]             0             0         1             0         1 #>  [50,]             0             0         1             1         0 #>  [51,]             0             0         1             1         0 #>  [52,]             1             0         1             1         0 #>  [53,]             0             0         1             0         1 #>  [54,]             0             0         1             1         0 #>  [55,]             1             0         1             1         0 #>  [56,]             1             0         1             0         1 #>  [57,]             0             0         1             1         0 #>  [58,]             0             0         1             1         0 #>  [59,]             0             0         1             1         0 #>  [60,]             0             0         1             1         0 #>  [61,]             0             0         1             0         1 #>  [62,]             1             0         1             0         1 #>  [ reached getOption(\"max.print\") -- omitted 238 rows ]"}]

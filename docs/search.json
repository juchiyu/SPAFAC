[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 SPAFAC authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/example1_sCA.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Example 1: Sparse Correspondence Analysis of the Causes of Death in the US in 2019","text":"begin loading SPAFAC package data. following heatmap depicts column profiles data matrix, columns ordered based hierarchical clustering based \\(\\chi^2\\)-distance coupled Ward’s agglomeration method.","code":"library(SPAFAC) #>  #> Attaching package: 'SPAFAC' #> The following objects are masked from 'package:sGSVD': #>  #>     is_GSVD, is_sGSVD, is_sPLS, is_sSVD data(\"example1_sCA\")  I <- nrow(example1_sCA) J <- ncol(example1_sCA)"},{"path":[]},{"path":"/articles/example1_sCA.html","id":"fixed-sparse-parameters","dir":"Articles","previous_headings":"sparse CA","what":"Fixed sparse parameters","title":"Example 1: Sparse Correspondence Analysis of the Causes of Death in the US in 2019","text":"","code":"text_size <- 8 dim2get <- 4L rdsleft <- rep(2.319896, dim2get) rdsright <- rep(1.353568, dim2get) #0.5994068   ca.res <- ExPosition::epCA(example1_sCA, k = 19, graphs = FALSE)  sca.res <- sparseCA(   example1_sCA,   components = dim2get,   rdsLeft = rdsleft,   rdsRight = rdsright ) #> [1] 0.31805697 0.18549833 0.11569657 0.06044603 sca.eig <- data.frame(   eig = sca.res$eig,    tau = 100 * sca.res$eig / sum(ca.res$ExPosition.Data$eigs))  color.sig =  \"#42376B\" ;color.ns = \"grey60\"; cex = 1.1; text.cex = 10; lwd = 1 scree.plot <-   sca.eig |>   ggplot(aes(x = 1:length(eig), y = tau)) +     geom_line(color = \"grey40\", size = lwd) +     geom_point(color = color.sig, size = cex) +     # geom_hline(yintercept = 1, linetype = \"dashed\", color = \"darkgreen\", size = lwd) +     scale_y_continuous(name = bquote(atop(bold(.(title)),paste('\\n\\n    Percentage of \\nvariance explained (%)'))),                        sec.axis = sec_axis(~.*(sca.eig$eig[1]/sca.eig$tau[1]), name = \"Pseudo-eigenvalues\")) +     xlab(\"Components\") +     scale_x_continuous(breaks=c(1:9)) +     theme(text = element_text(size = text.cex),           legend.position = \"none\",           axis.text.y.left = element_text(angle = 90),           axis.text.y.right = element_text(angle = 270),           panel.background = element_rect(fill = \"transparent\"),           panel.border = element_rect(color = \"black\", fill = \"transparent\")) #> Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0. #> ℹ Please use `linewidth` instead. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated.  scree.plot"},{"path":"/articles/example1_sCA.html","id":"age-categories","dir":"Articles","previous_headings":"sparse CA > Fixed sparse parameters","what":"Age categories","title":"Example 1: Sparse Correspondence Analysis of the Causes of Death in the US in 2019","text":"","code":"sca.fi.map.12 <- createFactorMap(X = sca.res$fi,                        col.points = \"#E08214\",                         col.labels = \"#E08214\",                        col.background = NULL,                        col.axes = \"#42376B\", width.axes = 0.5,                        title = \"sCA: row factor scores\",                        alpha.axes = 0.5,                        alpha.points = 0.5,                        pch = 16,                        axis1 = 1,                        axis2 = 2,                        constraints = NULL,                         text.cex = 2)  sca.fi.plot.12 <- sca.fi.map.12$zeMap_background + sca.fi.map.12$zeMap_dots + sca.fi.map.12$zeMap_text + sca.fi.map.12$label + geom_path(color = \"#E08214\") + theme(axis.title = element_text(size = text_size, color = \"#42376B\"), axis.text = element_text(size = text_size, color = \"#42376B\"), title = element_text(size = text_size, color = \"#42376B\"), panel.border = element_rect(size = 1.5, color = \"#42376B\", fill = NA)) #> Warning: The `size` argument of `element_rect()` is deprecated as of ggplot2 3.4.0. #> ℹ Please use the `linewidth` argument instead. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated.  sca.fi.plot.12 #> Warning: ggrepel: 3 unlabeled data points (too many overlaps). Consider #> increasing max.overlaps # cp 3 & 4 sca.fi.map.34 <- createFactorMap(X = sca.res$fi,                        col.points = \"#E08214\",                         col.labels = \"#E08214\",                        col.background = NULL,                        col.axes = \"#42376B\", width.axes = 0.5,                        title = \"sCA: row factor scores\",                        alpha.axes = 0.5,                        alpha.points = 0.5,                        pch = 16,                        axis1 = 3,                        axis2 = 4,                        constraints = NULL,                         text.cex = 2)  sca.fi.plot.34 <- sca.fi.map.34$zeMap_background + sca.fi.map.34$zeMap_dots + sca.fi.map.34$zeMap_text + sca.fi.map.34$label + geom_path(color = \"#E08214\") + theme(axis.title = element_text(size = text_size, color = \"#42376B\"), axis.text = element_text(size = text_size, color = \"#42376B\"), title = element_text(size = text_size, color = \"#42376B\"), panel.border = element_rect(size = 1.5, color = \"#42376B\", fill = NA))  sca.fi.plot.34 #> Warning: ggrepel: 10 unlabeled data points (too many overlaps). Consider #> increasing max.overlaps"},{"path":"/articles/example1_sCA.html","id":"causes-of-death","dir":"Articles","previous_headings":"sparse CA > Fixed sparse parameters","what":"Causes of death","title":"Example 1: Sparse Correspondence Analysis of the Causes of Death in the US in 2019","text":"","code":"sca.fj.map.12 <- createFactorMap(X = sca.res$fj,                        col.points = \"#2166AC\",                         col.labels = \"#2166AC\",                        col.background = NULL,                        col.axes = \"#42376B\", width.axes = 0.5,                        title = \"sCA: column factor scores\",                        alpha.axes = 0.5,                        alpha.points = 0.5,                        pch = 16,                        axis1 = 1,                        axis2 = 2,                        constraints = NULL,                         text.cex = 2)  sca.fj.plot.12 <- sca.fj.map.12$zeMap_background + sca.fj.map.12$zeMap_dots + sca.fj.map.12$zeMap_text + sca.fj.map.12$label + theme(axis.title = element_text(size = text_size, color = \"#42376B\"), axis.text = element_text(size = text_size, color = \"#42376B\"), title = element_text(size = text_size, color = \"#42376B\"), panel.border = element_rect(size = 1.5, color = \"#42376B\", fill = NA)) #> Warning: The `size` argument of `element_rect()` is deprecated as of ggplot2 3.4.0. #> ℹ Please use the `linewidth` argument instead. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated.  sca.fj.plot.12 #> Warning: ggrepel: 12 unlabeled data points (too many overlaps). Consider #> increasing max.overlaps # cp 3 & 4 sca.fj.map.34 <- createFactorMap(X = sca.res$fj,                        col.points = \"#2166AC\",                         col.labels = \"#2166AC\",                        col.background = NULL,                        col.axes = \"#42376B\", width.axes = 0.5,                        title = \"sCA: column factor scores\",                        alpha.axes = 0.5,                        alpha.points = 0.5,                        pch = 16,                        axis1 = 3,                        axis2 = 4,                        constraints = NULL,                         text.cex = 2)  sca.fj.plot.34 <- sca.fj.map.34$zeMap_background + sca.fj.map.34$zeMap_dots + sca.fj.map.34$zeMap_text + sca.fj.map.34$label + theme(axis.title = element_text(size = text_size, color = \"#42376B\"), axis.text = element_text(size = text_size, color = \"#42376B\"), title = element_text(size = text_size, color = \"#42376B\"), panel.border = element_rect(size = 1.5, color = \"#42376B\", fill = NA))  sca.fj.plot.34 #> Warning: ggrepel: 13 unlabeled data points (too many overlaps). Consider #> increasing max.overlaps"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ju-Chi Yu. Author, maintainer. Vincent Guillemot. Author. Hervé Abdi. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Yu J, Guillemot V, Abdi H (2024). SPAFAC: Sparse component methods. R package version 1.0.0.","code":"@Manual{,   title = {SPAFAC: Sparse component methods},   author = {Ju-Chi Yu and Vincent Guillemot and Hervé Abdi},   year = {2024},   note = {R package version 1.0.0}, }"},{"path":"/index.html","id":"spafac","dir":"","previous_headings":"","what":"SPAFAC - an R package for sparse factor methods","title":"SPAFAC - an R package for sparse factor methods","text":"goal SPAFAC …","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"SPAFAC - an R package for sparse factor methods","text":"can install development version SPAFAC GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"juchiyu/SPAFAC\")"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"SPAFAC - an R package for sparse factor methods","text":"basic example shows solve common problem:","code":"library(SPAFAC) ## basic example code"},{"path":"/reference/example1_sCA.html","id":null,"dir":"Reference","previous_headings":"","what":"USA Deaths in 2018 by Age and Cause Causes of death in the US in 2019 — example1_sCA","title":"USA Deaths in 2018 by Age and Cause Causes of death in the US in 2019 — example1_sCA","text":"dataset contains information number deaths USA 2018, categorized age cause death. causes death classified according International Statistical Classification Diseases Related Health Problems (ICD-10). Ages death grouped 5-year intervals, starting 1 year old, deaths 100 years grouped \"100+\" category. Deaths age 1 excluded due predominance perinatal causes category, overshadow effects. exclusion based observation perinatal causes rare age groups, 57 118 cases occurring 1 year old remaining 61 cases spread across 21 age groups. dataset represents 21x19 contingency table counts, showing number deaths cause age range.","code":""},{"path":"/reference/example1_sCA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"USA Deaths in 2018 by Age and Cause Causes of death in the US in 2019 — example1_sCA","text":"","code":"example1_sCA"},{"path":"/reference/example1_sCA.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"USA Deaths in 2018 by Age and Cause Causes of death in the US in 2019 — example1_sCA","text":"data frame 399 rows 3 columns: AgeGroup Age group death, grouped 5-year intervals, \"100+\" category. CauseOfDeath Cause death, categorized according ICD-10. NumberOfDeaths number deaths cause age range.","code":""},{"path":"/reference/example1_sCA.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"USA Deaths in 2018 by Age and Cause Causes of death in the US in 2019 — example1_sCA","text":"International Statistical Classification Diseases Related Health Problems (ICD-10).","code":""},{"path":"/reference/example1_sCA.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"USA Deaths in 2018 by Age and Cause Causes of death in the US in 2019 — example1_sCA","text":"https://www..int/classifications/icd/icdonlineversions/en/","code":""},{"path":"/reference/example2_sDiSCA.html","id":null,"dir":"Reference","previous_headings":"","what":"Punctuation Marks in Literary Works from Project Gutenberg — example2_sDiSCA","title":"Punctuation Marks in Literary Works from Project Gutenberg — example2_sDiSCA","text":"dataset compiles counts punctuation marks literary works authors different times origins. texts sourced Gutenberg Project processed using R gutenbergr package. dataset includes authors France (N = 63), United Kingdom (N = 61), United States (N = 36) spanning various periods (refer Table 1 details).","code":""},{"path":"/reference/example2_sDiSCA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Punctuation Marks in Literary Works from Project Gutenberg — example2_sDiSCA","text":"","code":"example2_sDiSCA"},{"path":"/reference/example2_sDiSCA.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Punctuation Marks in Literary Works from Project Gutenberg — example2_sDiSCA","text":"data frame row represents literary work includes following columns punctuation mark counts: Comma, Period, QuestionMark, ExclamationMark, Colon, Semicolon, Apostrophe, EnglishQuotes, FrenchQuotes, Dash, MDash, along metadata work Author, Country, Period.","code":""},{"path":"/reference/example2_sDiSCA.html","id":"example-sdisca","dir":"Reference","previous_headings":"","what":"example2_sDiSCA","title":"Punctuation Marks in Literary Works from Project Gutenberg — example2_sDiSCA","text":"data frame country Country name iso2, iso3 2 & 3 letter ISO country codes year Year","code":""},{"path":"/reference/example2_sDiSCA.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Punctuation Marks in Literary Works from Project Gutenberg — example2_sDiSCA","text":"Project Gutenberg, processed using gutenbergr R package. https://www.gutenberg.org/","code":""},{"path":"/reference/example2_sDiSCA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Punctuation Marks in Literary Works from Project Gutenberg — example2_sDiSCA","text":"dataset focuses frequency nine punctuation marks: comma (,), period (.), question mark (?), exclamation mark (!), colon (:), semicolon (;), apostrophe ('), English quotation marks (“ ”), French quotation marks (« »), dashes (-), M-dashes (—). Works translations excluded ensure dataset contains books written authors' original languages.","code":""},{"path":"/reference/example2_sDiSCA.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Punctuation Marks in Literary Works from Project Gutenberg — example2_sDiSCA","text":"Robinson, D. (2021). gutenbergr: Download Process Public Domain Works Project Gutenberg. R package version 0.2.0. https://CRAN.R-project.org/package=gutenbergr","code":""},{"path":"/reference/example3_sMCA.html","id":null,"dir":"Reference","previous_headings":"","what":"Chinese Version of the Independent and Interdependent Self Scale (C-IISS) Dataset — example3_sMCA","title":"Chinese Version of the Independent and Interdependent Self Scale (C-IISS) Dataset — example3_sMCA","text":"dataset contains responses 130 undergraduate students (77 females 53 males, mean age = 19.49, SD = 1.52) National Cheng Kung University Chinese version Independent Interdependent Self Scale (C-IISS). scale, developed Lu et al. (2007), comprises forty-two 7-point Likert scale items (1 = strongly disagree, 7 = strongly agree), 21 items measuring independence (awareness value oneself individual) 21 measuring interdependence (valuation actions based one's cohort). Participants provided written informed consent compensated NTD 120.","code":""},{"path":"/reference/example3_sMCA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Chinese Version of the Independent and Interdependent Self Scale (C-IISS) Dataset — example3_sMCA","text":"","code":"example3_sMCA"},{"path":"/reference/example3_sMCA.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Chinese Version of the Independent and Interdependent Self Scale (C-IISS) Dataset — example3_sMCA","text":"data frame 130 rows 42 columns representing Likert scale responses item, along demographic information participants.","code":""},{"path":"/reference/example3_sMCA.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Chinese Version of the Independent and Interdependent Self Scale (C-IISS) Dataset — example3_sMCA","text":"Lu et al. (2007). Development Chinese version Independent Interdependent Self Scale. Journal reference.","code":""},{"path":"/reference/example3_sMCA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Chinese Version of the Independent and Interdependent Self Scale (C-IISS) Dataset — example3_sMCA","text":"Prior analysis sMCA, responses item binned categories comparable sizes mitigate influence event rarity MCA (sMCA) results. association patterns items illustrated Supplementary Figures (refer Figure S1 binning Figure S2 association patterns).","code":""},{"path":"/reference/example3_sMCA.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Chinese Version of the Independent and Interdependent Self Scale (C-IISS) Dataset — example3_sMCA","text":"Lu, L. (2007). Developing Chinese version Independent Interdependent Self Scale. Journal Title, Volume(Issue), Page range. Supplementary Material: Figures S1 (Binning Responses) S2 (Association Patterns).","code":""},{"path":"/reference/example4_sDiMCA.html","id":null,"dir":"Reference","previous_headings":"","what":"Math Assessment for College Students (MACS) Dataset — example4_sDiMCA","title":"Math Assessment for College Students (MACS) Dataset — example4_sDiMCA","text":"dataset comprises responses Math Assessment College Students (MACS) undergraduate students enrolled introductory psychology statistics course urban public college northeast United States. MACS, 30-item paper--pencil test covering five content domains (Algebra, Arithmetic, Categorization Ranges, Decimals/Fractions/Percentages, Visual Understanding), administered across five semesters 460 participants.","code":""},{"path":"/reference/example4_sDiMCA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Math Assessment for College Students (MACS) Dataset — example4_sDiMCA","text":"","code":"example4_sDiMCA"},{"path":"/reference/example4_sDiMCA.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Math Assessment for College Students (MACS) Dataset — example4_sDiMCA","text":"data frame 460 rows variables MACS item, demographic information, academic performance scores. MACS item labeled according domain number, additional columns overall scores categorized academic performance.","code":""},{"path":"/reference/example4_sDiMCA.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Math Assessment for College Students (MACS) Dataset — example4_sDiMCA","text":"MACS test described Rabin (2018).","code":""},{"path":"/reference/example4_sDiMCA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Math Assessment for College Students (MACS) Dataset — example4_sDiMCA","text":"MACS test measures basic mathematics skills completed approximately 40 minutes first week semester. Responses binary scored (0 = incorrect, 1 = correct) partial credit. course computationally based, involving manual statistical tests software programs. Academic performance assessed three exams per semester, scores averaged categorized letter grades (, B, C, D, F). analysis purposes, grades B grouped together, D F, resulting three groups (AB, C, DF). Informed consent obtained IRB-approved protocol, compensation provided. Demographic academic performance data also collected. dataset used examine relationships basic mathematics skills, demographic data, academic performance.","code":""},{"path":"/reference/example4_sDiMCA.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Math Assessment for College Students (MACS) Dataset — example4_sDiMCA","text":"Rabin, L.. (2018). Development Validation Math Assessment College Students. Journal Title, Volume(Issue), Page range.","code":""},{"path":"/reference/is_GSVD.html","id":null,"dir":"Reference","previous_headings":"","what":"is_GSVD — is_GSVD","title":"is_GSVD — is_GSVD","text":"Tests x object class type \"GSVD\"","code":""},{"path":"/reference/is_GSVD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"is_GSVD — is_GSVD","text":"","code":"is_GSVD(x)"},{"path":"/reference/is_GSVD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"is_GSVD — is_GSVD","text":"x object test","code":""},{"path":"/reference/is_GSVD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"is_GSVD — is_GSVD","text":"boolean. TRUE object class GSVD, FALSE otherwise.","code":""},{"path":"/reference/is_GSVD.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"is_GSVD — is_GSVD","text":"three primary functions GSVD package produce inherited (hierarchical) class structure type \"GSVD\". functions geigen, gsvd, gplssvd.","code":""},{"path":[]},{"path":"/reference/is_discriminant.html","id":null,"dir":"Reference","previous_headings":"","what":"is_discriminant — is_discriminant","title":"is_discriminant — is_discriminant","text":"Tests x object class type \"discriminant\"","code":""},{"path":"/reference/is_discriminant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"is_discriminant — is_discriminant","text":"","code":"is_discriminant(x)"},{"path":"/reference/is_discriminant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"is_discriminant — is_discriminant","text":"x object test","code":""},{"path":"/reference/is_discriminant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"is_discriminant — is_discriminant","text":"boolean. TRUE object class discriminant, FALSE otherwise.","code":""},{"path":"/reference/is_discriminant.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"is_discriminant — is_discriminant","text":"functions sGSVD package perform discriminant analysis. function sparseDiCA.","code":""},{"path":[]},{"path":"/reference/is_mca.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if an Object is of Class ","title":"Check if an Object is of Class ","text":"Tests provided object x class type \"MCA\".","code":""},{"path":"/reference/is_mca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if an Object is of Class ","text":"","code":"is_mca(x)"},{"path":"/reference/is_mca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if an Object is of Class ","text":"x object test.","code":""},{"path":"/reference/is_mca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if an Object is of Class ","text":"logical value: TRUE object class \"MCA\", FALSE otherwise.","code":""},{"path":"/reference/is_mca.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check if an Object is of Class ","text":"function useful validating whether object belongs class \"MCA\", relevant functions sGSVD package, particularly performing discriminant multiple correspondence analysis, sparseDiMCA.","code":""},{"path":[]},{"path":"/reference/is_multitab.html","id":null,"dir":"Reference","previous_headings":"","what":"is_multitab — is_multitab","title":"is_multitab — is_multitab","text":"Tests x object class type \"MultiTab\"","code":""},{"path":"/reference/is_multitab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"is_multitab — is_multitab","text":"","code":"is_multitab(x)"},{"path":"/reference/is_multitab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"is_multitab — is_multitab","text":"x object test","code":""},{"path":"/reference/is_multitab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"is_multitab — is_multitab","text":"boolean. TRUE object class sGSVD, FALSE otherwise.","code":""},{"path":"/reference/is_multitab.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"is_multitab — is_multitab","text":"three primary functions sGSVD package produce inherited (hierarchical) class structure type \"spls\". functions sparsePLSC sparsePLSCA.","code":""},{"path":[]},{"path":"/reference/is_sEIGEN.html","id":null,"dir":"Reference","previous_headings":"","what":"is_sEIGEN — is_sEIGEN","title":"is_sEIGEN — is_sEIGEN","text":"Tests x object class type \"sEIGEN\"","code":""},{"path":"/reference/is_sEIGEN.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"is_sEIGEN — is_sEIGEN","text":"","code":"is_sEIGEN(x)"},{"path":"/reference/is_sEIGEN.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"is_sEIGEN — is_sEIGEN","text":"x object test","code":""},{"path":"/reference/is_sEIGEN.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"is_sEIGEN — is_sEIGEN","text":"boolean. TRUE object class sEIGEN, FALSE otherwise.","code":""},{"path":"/reference/is_sEIGEN.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"is_sEIGEN — is_sEIGEN","text":"functions sGSVD package analyzed sparse eigendecomposition sparseEIGEN. example, sparseMDS sparseDiSTATIS.","code":""},{"path":"/reference/is_sGEIGEN.html","id":null,"dir":"Reference","previous_headings":"","what":"is_sGEIGEN — is_sGEIGEN","title":"is_sGEIGEN — is_sGEIGEN","text":"Tests x object class type \"sGEIGEN\"","code":""},{"path":"/reference/is_sGEIGEN.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"is_sGEIGEN — is_sGEIGEN","text":"","code":"is_sGEIGEN(x)"},{"path":"/reference/is_sGEIGEN.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"is_sGEIGEN — is_sGEIGEN","text":"x object test","code":""},{"path":"/reference/is_sGEIGEN.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"is_sGEIGEN — is_sGEIGEN","text":"boolean. TRUE object class sGEIGEN, FALSE otherwise.","code":""},{"path":"/reference/is_sGEIGEN.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"is_sGEIGEN — is_sGEIGEN","text":"functions sGSVD package analyzed sparse generalized eigendecomposition sparseGEIGEN. example, sparseMDS sparseDiSTATIS.","code":""},{"path":"/reference/is_sGPCA.html","id":null,"dir":"Reference","previous_headings":"","what":"is_sGPCA — is_sGPCA","title":"is_sGPCA — is_sGPCA","text":"Tests x object class type \"sGPCA\"","code":""},{"path":"/reference/is_sGPCA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"is_sGPCA — is_sGPCA","text":"","code":"is_sGPCA(x)"},{"path":"/reference/is_sGPCA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"is_sGPCA — is_sGPCA","text":"x object test","code":""},{"path":"/reference/is_sGPCA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"is_sGPCA — is_sGPCA","text":"boolean. TRUE object class sPCA, FALSE otherwise.","code":""},{"path":"/reference/is_sGPCA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"is_sGPCA — is_sGPCA","text":"three primary functions sGPCA package produce inherited (hierarchical) class structure type \"sGPCA\". function sparseMFA.","code":""},{"path":[]},{"path":"/reference/is_sGSVD.html","id":null,"dir":"Reference","previous_headings":"","what":"is_sGSVD — is_sGSVD","title":"is_sGSVD — is_sGSVD","text":"Tests x object class type \"sGSVD\"","code":""},{"path":"/reference/is_sGSVD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"is_sGSVD — is_sGSVD","text":"","code":"is_sGSVD(x)"},{"path":"/reference/is_sGSVD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"is_sGSVD — is_sGSVD","text":"x object test","code":""},{"path":"/reference/is_sGSVD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"is_sGSVD — is_sGSVD","text":"boolean. TRUE object class sGSVD, FALSE otherwise.","code":""},{"path":"/reference/is_sGSVD.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"is_sGSVD — is_sGSVD","text":"three primary functions sGSVD package produce inherited (hierarchical) class structure type \"sGSVD\". functions sparseGSVD, sparseCA, sparseMCA, sparseMCA, sparseMFA, sparseDiCA, sPLSCA.","code":""},{"path":[]},{"path":"/reference/is_sMDS.html","id":null,"dir":"Reference","previous_headings":"","what":"is_sMDS — is_sMDS","title":"is_sMDS — is_sMDS","text":"Tests x object class type \"sMDS\"","code":""},{"path":"/reference/is_sMDS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"is_sMDS — is_sMDS","text":"","code":"is_sMDS(x)"},{"path":"/reference/is_sMDS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"is_sMDS — is_sMDS","text":"x object test","code":""},{"path":"/reference/is_sMDS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"is_sMDS — is_sMDS","text":"boolean. TRUE object class sMDS, FALSE otherwise.","code":""},{"path":"/reference/is_sMDS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"is_sMDS — is_sMDS","text":"functions sGSVD package analyzed sparse multidimensional scaling sparseMDS.","code":""},{"path":"/reference/is_sPLS.html","id":null,"dir":"Reference","previous_headings":"","what":"is_spls — is_sPLS","title":"is_spls — is_sPLS","text":"Tests x object class type \"sGSVD\"","code":""},{"path":"/reference/is_sPLS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"is_spls — is_sPLS","text":"","code":"is_sPLS(x)"},{"path":"/reference/is_sPLS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"is_spls — is_sPLS","text":"x object test","code":""},{"path":"/reference/is_sPLS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"is_spls — is_sPLS","text":"boolean. TRUE object class sGSVD, FALSE otherwise.","code":""},{"path":"/reference/is_sPLS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"is_spls — is_sPLS","text":"three primary functions sGSVD package produce inherited (hierarchical) class structure type \"spls\". functions sparsePLSC sparsePLSCA.","code":""},{"path":[]},{"path":"/reference/is_sSVD.html","id":null,"dir":"Reference","previous_headings":"","what":"is_sSVD — is_sSVD","title":"is_sSVD — is_sSVD","text":"Tests x object class type \"sSVD\"","code":""},{"path":"/reference/is_sSVD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"is_sSVD — is_sSVD","text":"","code":"is_sSVD(x)"},{"path":"/reference/is_sSVD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"is_sSVD — is_sSVD","text":"x object test","code":""},{"path":"/reference/is_sSVD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"is_sSVD — is_sSVD","text":"boolean. TRUE object class sGSVD, FALSE otherwise.","code":""},{"path":"/reference/is_sSVD.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"is_sSVD — is_sSVD","text":"three primary functions sGSVD package produce inherited (hierarchical) class structure type \"sSVD\". functions sparseSVD sparsePLSC.","code":""},{"path":[]},{"path":"/reference/is_sca.html","id":null,"dir":"Reference","previous_headings":"","what":"is_sca — is_sca","title":"is_sca — is_sca","text":"Tests x object class type \"sca\"","code":""},{"path":"/reference/is_sca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"is_sca — is_sca","text":"","code":"is_sca(x)"},{"path":"/reference/is_sca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"is_sca — is_sca","text":"x object test","code":""},{"path":"/reference/is_sca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"is_sca — is_sca","text":"boolean. TRUE object class sca, FALSE otherwise.","code":""},{"path":"/reference/is_sca.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"is_sca — is_sca","text":"functions sGSVD package perform discriminant simple correspondence analysis. function sparseDiSCA.","code":""},{"path":[]},{"path":"/reference/sparseCA.html","id":null,"dir":"Reference","previous_headings":"","what":"Group sparse Correspondence Analysis — sparseCA","title":"Group sparse Correspondence Analysis — sparseCA","text":"Group sparse Correspondence Analysis","code":""},{"path":"/reference/sparseCA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group sparse Correspondence Analysis — sparseCA","text":"","code":"sparseCA(   DATA,   components = 0,   tol = .Machine$double.eps,   doublecentering = TRUE,   init = \"svd\",   initLeft = NULL,   initRight = NULL,   seed = NULL,   rdsLeft = rep(1, components),   rdsRight = rep(1, components),   grpLeft = NULL,   grpRight = NULL,   orthogonality = \"loadings\",   OrthSpaceLeft = NULL,   OrthSpaceRight = NULL,   projPriority = \"orth\",   projPriorityLeft = projPriority,   projPriorityRight = projPriority,   itermaxALS = 1000,   itermaxPOCS = 1000,   epsALS = 1e-10,   epsPOCS = 1e-10 )"},{"path":"/reference/sparseCA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group sparse Correspondence Analysis — sparseCA","text":"DATA contingency table analysis. components number dimensions analysis; defaults 0. tol Tolerance convergence criterion; defaults .Machine$double.eps. doublecentering Logical indicating whether double centering applied; defaults TRUE. init Method initialization; defaults \"svd\". initLeft Initial values left side; defaults NULL. initRight Initial values right side; defaults NULL. seed Seed random number generation; defaults NULL. rdsLeft Radii left side; defaults rep(1, components). rdsRight Radii right side; defaults rep(1, components). grpLeft Group assignments left side; defaults NULL. grpRight Group assignments right side; defaults NULL. orthogonality Type orthogonality constraint; defaults \"loadings\". OrthSpaceLeft Orthogonal space left side; defaults NULL. OrthSpaceRight Orthogonal space right side; defaults NULL. projPriority Priority projection; defaults \"orth\". projPriorityLeft Priority left projection; defaults projPriority. projPriorityRight Priority right projection; defaults projPriority. itermaxALS Maximum number ALS iterations; defaults 1000. itermaxPOCS Maximum number POCS iterations; defaults 1000. epsALS Convergence criterion ALS; defaults 1e-10. epsPOCS Convergence criterion POCS; defaults 1e-10.","code":""},{"path":"/reference/sparseCA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group sparse Correspondence Analysis — sparseCA","text":"Returns object class c(\"sSVD\", \"sGSVD\", \"list\") containing results group sparse correspondence analysis. object includes various components produced sparse generalized singular value decomposition (sparseGSVD) subsequent spafac.processing. Key components include singular values, left right singular vectors, additional metrics relevant analysis. object also contains X.preproc, preprocessed data matrix used analysis.","code":""},{"path":"/reference/sparseCA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Group sparse Correspondence Analysis — sparseCA","text":"","code":"data(\"example1_sCA\") # Load the Cause of Deaths Data sca.res <- sparseCA(as.matrix(example1_sCA), components = 2L, rdsLeft = c(1.3, 1.3), rdsRight = c(2.3, 2.3)) #> [1] 0.4520297 0.1799586"},{"path":"/reference/sparseDiCA.html","id":null,"dir":"Reference","previous_headings":"","what":"Group Sparse Discriminant Correspondence Analysis — sparseDiCA","title":"Group Sparse Discriminant Correspondence Analysis — sparseDiCA","text":"Performs group sparse discriminant correspondence analysis (DiCA) given contingency table, using either multiple correspondence analysis (DiMCA) simple correspondence analysis (DiSCA) based specified ca.type.","code":""},{"path":"/reference/sparseDiCA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group Sparse Discriminant Correspondence Analysis — sparseDiCA","text":"","code":"sparseDiCA(   DATA,   design,   ca.type = \"mca\",   components = 0,   tol = .Machine$double.eps,   make_data_nominal = TRUE,   make_design_nominal = TRUE,   doublecentering = TRUE,   init = \"svd\",   initLeft = NULL,   initRight = NULL,   seed = NULL,   rdsLeft = rep(1, components),   rdsRight = rep(1, components),   grpLeft = NULL,   grpRight = NULL,   orthogonality = \"loadings\",   OrthSpaceLeft = NULL,   OrthSpaceRight = NULL,   projPriority = \"orth\",   projPriorityLeft = projPriority,   projPriorityRight = projPriority,   itermaxALS = 1000,   itermaxPOCS = 1000,   epsALS = 1e-10,   epsPOCS = 1e-10 )"},{"path":"/reference/sparseDiCA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group Sparse Discriminant Correspondence Analysis — sparseDiCA","text":"DATA contingency table analysis. design design vector observations (.e., rows) DATA. ca.type Type correspondence analysis use, either \"mca\" multiple correspondence analysis \"sca\" simple correspondence analysis; defaults \"mca\". components number dimensions analysis; defaults 0. tol Tolerance convergence criterion; defaults .Machine$double.eps. make_data_nominal Logical indicating whether treat data nominal (TRUE) (FALSE); defaults TRUE. make_design_nominal Logical indicating whether treat design nominal (TRUE) (FALSE); defaults TRUE. doublecentering Logical indicating whether double centering applied; defaults TRUE. init Method initialization; defaults \"svd\". initLeft Initial values left side; defaults NULL. initRight Initial values right side; defaults NULL. seed Seed random number generation; defaults NULL. rdsLeft Radii left side; defaults rep(1, components). rdsRight Radii right side; defaults rep(1, components). grpLeft Grouping vector rows; defaults NULL. grpRight Grouping vector columns; defaults NULL. orthogonality Type orthogonality constraint; defaults \"loadings\". OrthSpaceLeft Orthogonal space left side; defaults NULL. OrthSpaceRight Orthogonal space right side; defaults NULL. projPriority Priority projection; defaults \"orth\". projPriorityLeft Priority left projection; defaults projPriority. projPriorityRight Priority right projection; defaults projPriority. itermaxALS Maximum number ALS iterations; defaults 1000. itermaxPOCS Maximum number POCS iterations; defaults 1000. epsALS Convergence criterion ALS; defaults 1e-10. epsPOCS Convergence criterion POCS; defaults 1e-10.","code":""},{"path":"/reference/sparseDiCA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group Sparse Discriminant Correspondence Analysis — sparseDiCA","text":"Returns object containing results group sparse discriminant correspondence analysis. specific type analysis results structure depend ca.type parameter.","code":""},{"path":"/reference/sparseDiCA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Group Sparse Discriminant Correspondence Analysis — sparseDiCA","text":"","code":"if (FALSE) { res.sdisca <- sparseDiCA(DATA = FrEnAuthors.unblnc,   design = data.dx.unblnc$GroupDiCA.recode,   ca.type = \"sca\", components = kopt,   make_design_nominal = TRUE,   rdsLeft = rep(rdsleftopt, K),   rdsRight = rep(rdsrightopt, K),   initLeft = U0, initRight = V0,   grpLeft = NULL, grpRight = NULL) }"},{"path":"/reference/sparseDiMCA.html","id":null,"dir":"Reference","previous_headings":"","what":"Group Sparse Discriminant Correspondence Analysis for MCA — sparseDiMCA","title":"Group Sparse Discriminant Correspondence Analysis for MCA — sparseDiMCA","text":"Performs group sparse discriminant correspondence analysis specifically multiple correspondence analysis (MCA) given contingency table.","code":""},{"path":"/reference/sparseDiMCA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group Sparse Discriminant Correspondence Analysis for MCA — sparseDiMCA","text":"","code":"sparseDiMCA(   DATA,   design,   components = 0,   tol = .Machine$double.eps,   make_data_nominal = TRUE,   make_design_nominal = TRUE,   doublecentering = TRUE,   init = \"svd\",   initLeft = NULL,   initRight = NULL,   seed = NULL,   rdsLeft = rep(1, components),   rdsRight = rep(1, components),   grpLeft = NULL,   grpRight = NULL,   orthogonality = \"loadings\",   OrthSpaceLeft = NULL,   OrthSpaceRight = NULL,   projPriority = \"orth\",   projPriorityLeft = projPriority,   projPriorityRight = projPriority,   itermaxALS = 1000,   itermaxPOCS = 1000,   epsALS = 1e-10,   epsPOCS = 1e-10 )"},{"path":"/reference/sparseDiMCA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group Sparse Discriminant Correspondence Analysis for MCA — sparseDiMCA","text":"DATA contingency table analysis. design design vector observations (rows) DATA. components number dimensions analysis; defaults 0. tol Tolerance convergence criterion; defaults .Machine$double.eps. make_data_nominal Logical indicating whether treat DATA nominal (TRUE) (FALSE); defaults TRUE. make_design_nominal Logical indicating whether treat design vector nominal (TRUE) (FALSE); defaults TRUE. doublecentering Logical indicating whether double centering applied; defaults TRUE. init Method initialization; defaults \"svd\". initLeft Initial values left side; defaults NULL. initRight Initial values right side; defaults NULL. seed Seed random number generation; defaults NULL. rdsLeft Radii left side; defaults rep(1, components). rdsRight Radii right side; defaults rep(1, components). grpLeft Grouping vector rows; defaults NULL. grpRight Grouping vector columns; required DATA treated nominal. orthogonality Type orthogonality constraint; defaults \"loadings\". OrthSpaceLeft Orthogonal space left side; defaults NULL. OrthSpaceRight Orthogonal space right side; defaults NULL. projPriority Priority projection; defaults \"orth\". projPriorityLeft Priority left projection; defaults projPriority. projPriorityRight Priority right projection; defaults projPriority. itermaxALS Maximum number ALS iterations; defaults 1000. itermaxPOCS Maximum number POCS iterations; defaults 1000. epsALS Convergence criterion ALS; defaults 1e-10. epsPOCS Convergence criterion POCS; defaults 1e-10.","code":""},{"path":"/reference/sparseDiMCA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group Sparse Discriminant Correspondence Analysis for MCA — sparseDiMCA","text":"Returns object class c(\"sSVD\", \"sGSVD\", \"MCA\", \"discriminant\", \"list\") containing results analysis. object includes results sparse generalized singular value decomposition (sparseGSVD) additional data specific discriminant MCA.","code":""},{"path":"/reference/sparseDiMCA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Group Sparse Discriminant Correspondence Analysis for MCA — sparseDiMCA","text":"","code":"if (FALSE) { # Example usage of sparseDiMCA function # Assuming `data` is a contingency table and `design` is the design vector result <- sparseDiMCA(DATA = data, design = design) }"},{"path":"/reference/sparseDiSCA.html","id":null,"dir":"Reference","previous_headings":"","what":"Group Sparse Discriminant Correspondence Analysis for Simple CA — sparseDiSCA","title":"Group Sparse Discriminant Correspondence Analysis for Simple CA — sparseDiSCA","text":"Performs group sparse discriminant correspondence analysis specifically simple correspondence analysis (SCA) given contingency table.","code":""},{"path":"/reference/sparseDiSCA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group Sparse Discriminant Correspondence Analysis for Simple CA — sparseDiSCA","text":"","code":"sparseDiSCA(   DATA,   design,   components = 0,   tol = .Machine$double.eps,   make_design_nominal = TRUE,   doublecentering = TRUE,   init = \"svd\",   initLeft = NULL,   initRight = NULL,   seed = NULL,   rdsLeft = rep(1, components),   rdsRight = rep(1, components),   grpLeft = NULL,   grpRight = NULL,   orthogonality = \"loadings\",   OrthSpaceLeft = NULL,   OrthSpaceRight = NULL,   projPriority = \"orth\",   projPriorityLeft = projPriority,   projPriorityRight = projPriority,   itermaxALS = 1000,   itermaxPOCS = 1000,   epsALS = 1e-10,   epsPOCS = 1e-10 )"},{"path":"/reference/sparseDiSCA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group Sparse Discriminant Correspondence Analysis for Simple CA — sparseDiSCA","text":"DATA contingency table analysis. design design vector observations (rows) DATA. components number dimensions analysis; defaults 0. tol Tolerance convergence criterion; defaults .Machine$double.eps. make_design_nominal Logical indicating whether treat design vector nominal (TRUE) (FALSE); defaults TRUE. doublecentering Logical indicating whether double centering applied; defaults TRUE. init Method initialization; defaults \"svd\". initLeft Initial values left side; defaults NULL. initRight Initial values right side; defaults NULL. seed Seed random number generation; defaults NULL. rdsLeft Radii left side; defaults rep(1, components). rdsRight Radii right side; defaults rep(1, components). grpLeft Grouping vector rows; defaults NULL. grpRight Grouping vector columns; defaults NULL. orthogonality Type orthogonality constraint; defaults \"loadings\". OrthSpaceLeft Orthogonal space left side; defaults NULL. OrthSpaceRight Orthogonal space right side; defaults NULL. projPriority Priority projection; defaults \"orth\". projPriorityLeft Priority left projection; defaults projPriority. projPriorityRight Priority right projection; defaults projPriority. itermaxALS Maximum number ALS iterations; defaults 1000. itermaxPOCS Maximum number POCS iterations; defaults 1000. epsALS Convergence criterion ALS; defaults 1e-10. epsPOCS Convergence criterion POCS; defaults 1e-10.","code":""},{"path":"/reference/sparseDiSCA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group Sparse Discriminant Correspondence Analysis for Simple CA — sparseDiSCA","text":"Returns object class c(\"sSVD\", \"sGSVD\", \"SCA\", \"discriminant\", \"list\") containing results analysis. object includes results sparse generalized singular value decomposition (sparseGSVD) additional data specific discriminant SCA.","code":""},{"path":"/reference/sparseDiSCA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Group Sparse Discriminant Correspondence Analysis for Simple CA — sparseDiSCA","text":"","code":"# Example usage of sparseDiSCA function # Assuming `data` is a contingency table and `design` is the design vector if (FALSE) result <- sparseDiSCA(DATA = data, design = design)"},{"path":"/reference/sparseDiSTATIS.html","id":null,"dir":"Reference","previous_headings":"","what":"Sparse DiSTATIS — sparseDiSTATIS","title":"Sparse DiSTATIS — sparseDiSTATIS","text":"Performs Sparse DiSTATIS analysis cube distance matrices.","code":""},{"path":"/reference/sparseDiSTATIS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sparse DiSTATIS — sparseDiSTATIS","text":"","code":"sparseDiSTATIS(   DATA,   method = \"distance\",   Cmat.is.RV = TRUE,   masses.Cmat = NULL,   masses.Splus = NULL,   sparse.Cmat = FALSE,   sparse.Splus = TRUE,   components.Cmat = 0,   components.Splus = 0,   init.Cmat = \"svd\",   init.Splus = \"svd\",   seed = NULL,   grp.Cmat = NULL,   grp.Splus = NULL,   rds.Cmat = rep(1, components.Cmat),   rds.Splus = rep(1, components.Splus),   orthogonality.Cmat = \"loadings\",   OrthSpace.Cmat = NULL,   orthogonality.Splus = \"loadings\",   OrthSpace.Splus = NULL,   projPriority.Cmat = \"orth\",   projPriority.Splus = \"orth\",   itermaxALS.Cmat = 1000,   itermaxPOCS.Cmat = 1000,   itermaxALS.Splus = 1000,   itermaxPOCS.Splus = 1000,   epsALS.Cmat = 1e-10,   epsPOCS.Cmat = 1e-10,   epsALS.Splus = 1e-10,   epsPOCS.Splus = 1e-10,   tol = .Machine$double.eps )"},{"path":"/reference/sparseDiSTATIS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sparse DiSTATIS — sparseDiSTATIS","text":"DATA cube distance matrices analysis. method Method analysis, either \"distance\" \"covariance\". masses.Cmat vector masses rows/columns RV matrix; defaults NULL 1s. masses.Splus vector masses rows/columns table cube; defaults NULL equal masses 1/(number rows). sparse.Cmat Logical indicating whether apply sparsity RV matrix; defaults FALSE. sparse.Splus Logical indicating whether apply sparsity table; defaults TRUE. components.Cmat Number components RV matrix; defaults 0. components.Splus Number components table; defaults 0. init.Cmat Initialization method RV matrix; defaults \"svd\". init.Splus Initialization method table; defaults \"svd\". seed Seed random number generation; defaults NULL. grp.Cmat Grouping vector RV matrix; defaults NULL. grp.Splus Grouping vector table; defaults NULL. rds.Cmat Radii RV matrix; defaults rep(1, components.Cmat). rds.Splus Radii table; defaults rep(1, components.Splus). orthogonality.Cmat Type orthogonality constraint RV matrix; defaults \"loadings\". OrthSpace.Cmat Orthogonal space RV matrix; defaults NULL. orthogonality.Splus Type orthogonality constraint table; defaults \"loadings\". OrthSpace.Splus Orthogonal space table; defaults NULL. projPriority.Cmat Priority projection RV matrix; defaults \"orth\". projPriority.Splus Priority projection table; defaults \"orth\". itermaxALS.Cmat Maximum number ALS iterations RV matrix; defaults 1000. itermaxPOCS.Cmat Maximum number POCS iterations RV matrix; defaults 1000. itermaxALS.Splus Maximum number ALS iterations table; defaults 1000. itermaxPOCS.Splus Maximum number POCS iterations table; defaults 1000. epsALS.Cmat Convergence criterion ALS RV matrix; defaults 1e-10. epsPOCS.Cmat Convergence criterion POCS RV matrix; defaults 1e-10. epsALS.Splus Convergence criterion ALS table; defaults 1e-10. epsPOCS.Splus Convergence criterion POCS table; defaults 1e-10. tol Tolerance convergence criterion; defaults .Machine$double.eps.","code":""},{"path":"/reference/sparseDiSTATIS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sparse DiSTATIS — sparseDiSTATIS","text":"Returns object containing results Sparse DiSTATIS analysis, including results RV matrix individual table, along various parameters settings used analysis.","code":""},{"path":"/reference/sparseDiSTATIS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sparse DiSTATIS — sparseDiSTATIS","text":"","code":"# Example usage of sparseSTATIS function # Assuming `X` is a data matrix and `column.design` is the design vector if (FALSE) result <- sparseDiSTATIS(X = X, column.design = column.design)"},{"path":"/reference/sparseMCA.html","id":null,"dir":"Reference","previous_headings":"","what":"Group Sparse Multiple Correspondence Analysis — sparseMCA","title":"Group Sparse Multiple Correspondence Analysis — sparseMCA","text":"Performs group sparse multiple correspondence analysis (MCA) given contingency table.","code":""},{"path":"/reference/sparseMCA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group Sparse Multiple Correspondence Analysis — sparseMCA","text":"","code":"sparseMCA(   DATA,   components = 0,   tol = .Machine$double.eps,   make_data_nominal = TRUE,   doublecentering = TRUE,   init = \"svd\",   initLeft = NULL,   initRight = NULL,   seed = NULL,   rdsLeft = rep(1, components),   rdsRight = rep(1, components),   grpLeft = NULL,   grpRight = NULL,   orthogonality = \"loadings\",   OrthSpaceLeft = NULL,   OrthSpaceRight = NULL,   projPriority = \"orth\",   projPriorityLeft = projPriority,   projPriorityRight = projPriority,   correction4SI = \"mca\",   itermaxALS = 1000,   itermaxPOCS = 1000,   epsALS = 1e-10,   epsPOCS = 1e-10 )"},{"path":"/reference/sparseMCA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group Sparse Multiple Correspondence Analysis — sparseMCA","text":"DATA contingency table analysis. components number dimensions analysis; defaults 0. tol Tolerance convergence criterion; defaults .Machine$double.eps. make_data_nominal Logical indicating whether treat DATA nominal (TRUE) (FALSE); defaults TRUE. doublecentering Logical indicating whether double centering applied; defaults TRUE. init Method initialization; defaults \"svd\". initLeft Initial values left side; defaults NULL. initRight Initial values right side; defaults NULL. seed Seed random number generation; defaults NULL. rdsLeft Radii left side; defaults rep(1, components). rdsRight Radii right side; defaults rep(1, components). grpLeft Grouping vector rows; defaults NULL. grpRight Grouping vector columns; required DATA treated nominal. orthogonality Type orthogonality constraint; defaults \"loadings\". OrthSpaceLeft Orthogonal space left side; defaults NULL. OrthSpaceRight Orthogonal space right side; defaults NULL. projPriority Priority projection; defaults \"orth\". projPriorityLeft Priority left projection; defaults projPriority. projPriorityRight Priority right projection; defaults projPriority. correction4SI Correction method supplementary items; defaults \"mca\". itermaxALS Maximum number ALS iterations; defaults 1000. itermaxPOCS Maximum number POCS iterations; defaults 1000. epsALS Convergence criterion ALS; defaults 1e-10. epsPOCS Convergence criterion POCS; defaults 1e-10.","code":""},{"path":"/reference/sparseMCA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group Sparse Multiple Correspondence Analysis — sparseMCA","text":"Returns object class c(\"sSVD\", \"sGSVD\", \"list\") containing results sparse multiple correspondence analysis. object includes results sparse generalized singular value decomposition (sparseGSVD) additional data specific MCA.","code":""},{"path":"/reference/sparseMCA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Group Sparse Multiple Correspondence Analysis — sparseMCA","text":"","code":"# Example usage of sparseMCA function # Assuming `data` is a contingency table #' \\dontrun{result <- sparseMCA(DATA = data)}"},{"path":"/reference/sparseMDS.html","id":null,"dir":"Reference","previous_headings":"","what":"Sparse Multidimensional Scaling — sparseMDS","title":"Sparse Multidimensional Scaling — sparseMDS","text":"Performs sparse multidimensional scaling (MDS) given data matrix.","code":""},{"path":"/reference/sparseMDS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sparse Multidimensional Scaling — sparseMDS","text":"","code":"sparseMDS(   DATA,   masses = NULL,   components = 0,   tol = .Machine$double.eps,   method = \"distance\",   init = \"svd\",   seed = NULL,   grp = NULL,   rds = rep(1, components),   orthogonality = \"loadings\",   OrthSpace = NULL,   projPriority = \"orth\",   itermaxALS = 1000,   itermaxPOCS = 1000,   epsALS = 1e-10,   epsPOCS = 1e-10 )"},{"path":"/reference/sparseMDS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sparse Multidimensional Scaling — sparseMDS","text":"DATA data matrix MDS analysis. masses vector masses rows/columns; defaults NULL equal masses 1/(number rows). components number dimensions analysis; defaults 0. tol Tolerance convergence criterion; defaults .Machine$double.eps. method Method analysis, either \"distance\" \"covariance\". init Initialization method; defaults \"svd\". seed Seed random number generation; defaults NULL. rds Radii analysis; defaults rep(1, components). orthogonality Type orthogonality constraint; defaults \"loadings\". OrthSpace Orthogonal space analysis; defaults NULL. projPriority Priority projection; defaults \"orth\". itermaxALS Maximum number ALS iterations; defaults 1000. itermaxPOCS Maximum number POCS iterations; defaults 1000. epsALS Convergence criterion ALS; defaults 1e-10. epsPOCS Convergence criterion POCS; defaults 1e-10.","code":""},{"path":"/reference/sparseMDS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sparse Multidimensional Scaling — sparseMDS","text":"Returns object containing results sparse MDS analysis, including eigenvalues, eigenvectors, various metrics relevant analysis.","code":""},{"path":"/reference/sparseMDS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sparse Multidimensional Scaling — sparseMDS","text":"","code":"# Example usage of sparseMDS function # Assuming `data` is a data matrix #' \\dontrun{result <- sparseMDS(DATA = data)}"},{"path":"/reference/sparseMFA.html","id":null,"dir":"Reference","previous_headings":"","what":"Sparse Multiple Factor Analysis — sparseMFA","title":"Sparse Multiple Factor Analysis — sparseMFA","text":"Performs sparse multiple factor analysis (MFA) given data matrix.","code":""},{"path":"/reference/sparseMFA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sparse Multiple Factor Analysis — sparseMFA","text":"","code":"sparseMFA(   X,   column.design,   components = 0,   sparseOption = \"variable\",   center = TRUE,   scale = TRUE,   mfa.scale = TRUE,   tol = .Machine$double.eps,   init = \"svd\",   initLeft = NULL,   initRight = NULL,   seed = NULL,   rdsLeft = rep(1, components),   rdsRight = rep(1, components),   grpLeft = NULL,   grpRight = NULL,   orthogonality = \"loadings\",   OrthSpaceLeft = NULL,   OrthSpaceRight = NULL,   projPriority = \"orth\",   projPriorityLeft = projPriority,   projPriorityRight = projPriority,   itermaxALS = 1000,   itermaxPOCS = 1000,   epsALS = 1e-10,   epsPOCS = 1e-10 )"},{"path":"/reference/sparseMFA.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Sparse Multiple Factor Analysis — sparseMFA","text":"lines function inspired MExPosition package Derek Beaton Cherise Chin Fatt.","code":""},{"path":"/reference/sparseMFA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sparse Multiple Factor Analysis — sparseMFA","text":"X Data matrix rows J columns. column.design Design vector indicating grouping columns. components number dimensions extract; defaults 0. sparseOption \"variable\" \"subtable\" indicating sparsity option. center Logical numeric vector centering column X; passed scale. scale Logical numeric vector scaling column X; passed scale. tol Tolerance convergence criterion; defaults .Machine$double.eps. init Initialization method; defaults \"svd\". initLeft Initial values left side; defaults NULL. initRight Initial values right side; defaults NULL. seed Seed random number generation; defaults NULL. rdsLeft Radii left side; defaults rep(1, components). rdsRight Radii right side; defaults rep(1, components). grpLeft Grouping vector left side; defaults NULL. grpRight Grouping vector right side; based sparseOption. orthogonality Type orthogonality constraint; defaults \"loadings\". OrthSpaceLeft Orthogonal space left side; defaults NULL. OrthSpaceRight Orthogonal space right side; defaults NULL. projPriority Priority projection; defaults \"orth\". itermaxALS Maximum number ALS iterations; defaults 1000. itermaxPOCS Maximum number POCS iterations; defaults 1000. epsALS Convergence criterion ALS; defaults 1e-10. epsPOCS Convergence criterion POCS; defaults 1e-10.","code":""},{"path":"/reference/sparseMFA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sparse Multiple Factor Analysis — sparseMFA","text":"Returns object containing results sparse MFA analysis. object includes results sparse generalized singular value decomposition (sparseGSVD) additional data specific MFA.","code":""},{"path":"/reference/sparseMFA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sparse Multiple Factor Analysis — sparseMFA","text":"","code":"# Example usage of sparseMFA function # Assuming `data` is a data matrix and `column.design` is the design vector if (FALSE) result <- sparseMFA(X = data, column.design = column.design)"},{"path":"/reference/sparsePLSC.html","id":null,"dir":"Reference","previous_headings":"","what":"Sparse Partial Least Square Correlation — sparsePLSC","title":"Sparse Partial Least Square Correlation — sparsePLSC","text":"Performs sparse partial least square correlation analysis two data matrices.","code":""},{"path":"/reference/sparsePLSC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sparse Partial Least Square Correlation — sparsePLSC","text":"","code":"sparsePLSC(   X,   Y,   components = 0,   center_X = TRUE,   center_Y = TRUE,   scale_X = TRUE,   scale_Y = TRUE,   tol = .Machine$double.eps,   init = \"svd\",   initLeft = NULL,   initRight = NULL,   seed = NULL,   rdsLeft = rep(1, components),   rdsRight = rep(1, components),   grpLeft = NULL,   grpRight = NULL,   orthogonality = \"both\",   OrthSpaceLeft = NULL,   OrthSpaceRight = NULL,   projPriority = \"orth\",   projPriorityLeft = projPriority,   projPriorityRight = projPriority,   itermaxALS = 1000,   itermaxPOCS = 1000,   epsALS = 1e-10,   epsPOCS = 1e-10 )"},{"path":"/reference/sparsePLSC.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Sparse Partial Least Square Correlation — sparsePLSC","text":"arguments function inspired GPLS package Derek Beaton.","code":""},{"path":"/reference/sparsePLSC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sparse Partial Least Square Correlation — sparsePLSC","text":"X Data matrix rows J columns. Y Data matrix rows K columns. components number dimensions extract; defaults 0. center_X Logical numeric vector centering column X; passed scale. center_Y Logical numeric vector centering column Y; passed scale. scale_X Logical numeric vector scaling column X; passed scale. scale_Y Logical numeric vector scaling column Y; passed scale. tol Tolerance convergence criterion; defaults .Machine$double.eps. init Initialization method; defaults \"svd\". initLeft Initial values left side; defaults NULL. initRight Initial values right side; defaults NULL. seed Seed random number generation; defaults NULL. rdsLeft Radii left side; defaults rep(1, components). rdsRight Radii right side; defaults rep(1, components). grpLeft Grouping vector left side; defaults NULL. grpRight Grouping vector right side; defaults NULL. orthogonality Type orthogonality constraint; defaults \"\". OrthSpaceLeft Orthogonal space left side; defaults NULL. OrthSpaceRight Orthogonal space right side; defaults NULL. projPriority Priority projection; defaults \"orth\". projPriorityLeft Priority left projection; defaults projPriority. projPriorityRight Priority right projection; defaults projPriority. itermaxALS Maximum number ALS iterations; defaults 1000. itermaxPOCS Maximum number POCS iterations; defaults 1000. epsALS Convergence criterion ALS; defaults 1e-10. epsPOCS Convergence criterion POCS; defaults 1e-10.","code":""},{"path":"/reference/sparsePLSC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sparse Partial Least Square Correlation — sparsePLSC","text":"Returns object containing results sparse partial least square correlation analysis. object includes results sparse generalized singular value decomposition (sparseGSVD) applied X Y, additional data specific analysis.","code":""},{"path":"/reference/sparsePLSC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sparse Partial Least Square Correlation — sparsePLSC","text":"","code":"# Example usage of sparsePLSC function # Assuming `X` and `Y` are data matrices if (FALSE) result <- sparsePLSC(X = X, Y = Y)"},{"path":"/reference/sparsePLSCA.html","id":null,"dir":"Reference","previous_headings":"","what":"Sparse Partial Least Square Correspondence Analysis — sparsePLSCA","title":"Sparse Partial Least Square Correspondence Analysis — sparsePLSCA","text":"Performs sparse partial least square correspondence analysis (PLSCA) two data matrices.","code":""},{"path":"/reference/sparsePLSCA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sparse Partial Least Square Correspondence Analysis — sparsePLSCA","text":"","code":"sparsePLSCA(   X,   Y,   Mx = NULL,   My = NULL,   Wx = NULL,   Wy = NULL,   components = 2L,   tol = .Machine$double.eps,   doublecentering_X = TRUE,   doublecentering_Y = TRUE,   init = \"svd\",   initLeft = NULL,   initRight = NULL,   seed = NULL,   rdsLeft = rep(1, components),   rdsRight = rep(1, components),   grpLeft = NULL,   grpRight = NULL,   orthogonality = \"both\",   OrthSpaceLeft = NULL,   OrthSpaceRight = NULL,   projPriority = \"orth\",   projPriorityLeft = projPriority,   projPriorityRight = projPriority,   itermaxALS = 1000,   itermaxPOCS = 1000,   epsALS = 1e-10,   epsPOCS = 1e-10 )"},{"path":"/reference/sparsePLSCA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sparse Partial Least Square Correspondence Analysis — sparsePLSCA","text":"X Data matrix rows J columns. Y Data matrix rows K columns. Mx Diagonal weight matrix rows X; defaults NULL. Diagonal weight matrix rows Y; defaults NULL. Wx Diagonal weight matrix columns X; defaults NULL. Wy Diagonal weight matrix columns Y; defaults NULL. components number dimensions extract; defaults 2. tol Tolerance convergence criterion; defaults .Machine$double.eps. doublecentering_X Logical indicating whether apply double centering X; defaults TRUE. doublecentering_Y Logical indicating whether apply double centering Y; defaults TRUE. init Initialization method; defaults \"svd\". initLeft Initial values left side; defaults NULL. initRight Initial values right side; defaults NULL. seed Seed random number generation; defaults NULL. rdsLeft Radii left side; defaults rep(1, components). rdsRight Radii right side; defaults rep(1, components). grpLeft Grouping vector left side; defaults NULL. grpRight Grouping vector right side; defaults NULL. orthogonality Type orthogonality constraint; defaults \"\". OrthSpaceLeft Orthogonal space left side; defaults NULL. OrthSpaceRight Orthogonal space right side; defaults NULL. projPriority Priority projection; defaults \"orth\". projPriorityLeft Priority left projection; defaults projPriority. projPriorityRight Priority right projection; defaults projPriority. itermaxALS Maximum number ALS iterations; defaults 1000. itermaxPOCS Maximum number POCS iterations; defaults 1000. epsALS Convergence criterion ALS; defaults 1e-10. epsPOCS Convergence criterion POCS; defaults 1e-10.","code":""},{"path":"/reference/sparsePLSCA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sparse Partial Least Square Correspondence Analysis — sparsePLSCA","text":"Returns object containing results sparse partial least square correspondence analysis. object includes results sparse generalized singular value decomposition (sparseGSVD) applied X Y, additional data specific analysis.","code":""},{"path":"/reference/sparsePLSCA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sparse Partial Least Square Correspondence Analysis — sparsePLSCA","text":"","code":"# Example usage of sparsePLSCA function # Assuming `X` and `Y` are data matrices if (FALSE) result <- sparsePLSCA(X = X, Y = Y)"},{"path":"/reference/sparseSTATIS.html","id":null,"dir":"Reference","previous_headings":"","what":"Sparse STATIS — sparseSTATIS","title":"Sparse STATIS — sparseSTATIS","text":"Performs sparse STATIS analysis data matrix specific column design.","code":""},{"path":"/reference/sparseSTATIS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sparse STATIS — sparseSTATIS","text":"","code":"sparseSTATIS(   X,   column.design,   mfa.normalize = TRUE,   sparse.Cmat = FALSE,   sparse.grandX = TRUE,   components.Cmat = 0,   components.grandX = 0,   sparseOption = \"variable\",   center = TRUE,   scale = TRUE,   tol = .Machine$double.eps,   init.Cmat = \"eig\",   init.grandX = \"svd\",   initLeft.grandX = NULL,   initRight.grandX = NULL,   seed = NULL,   rdsLeft.Cmat = rep(1, components.Cmat),   rdsRight.Cmat = rep(1, components.Cmat),   rdsLeft.grandX = rep(1, components.grandX),   rdsRight.grandX = rep(1, components.grandX),   grp.Cmat = NULL,   grpLeft.grandX = NULL,   grpRight.grandX = NULL,   orthogonality.Cmat = \"loadings\",   OrthSpaceLeft.Cmat = NULL,   OrthSpaceRight.Cmat = NULL,   orthogonality.grandX = \"loadings\",   OrthSpaceLeft.grandX = NULL,   OrthSpaceRight.grandX = NULL,   projPriority.Cmat = \"orth\",   projPriorityLeft.Cmat = projPriority.Cmat,   projPriorityRight.Cmat = projPriority.Cmat,   projPriority.grandX = \"orth\",   projPriorityLeft.grandX = projPriority.grandX,   projPriorityRight.Slus = projPriority.grandX,   itermaxALS.Cmat = 1000,   itermaxPOCS.Cmat = 1000,   itermaxALS.grandX = 1000,   itermaxPOCS.grandX = 1000,   epsALS.Cmat = 1e-10,   epsPOCS.Cmat = 1e-10,   epsALS.grandX = 1e-10,   epsPOCS.grandX = 1e-10 )"},{"path":"/reference/sparseSTATIS.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Sparse STATIS — sparseSTATIS","text":"lines function inspired MExPosition package Derek Beaton Cherise Chin Fatt.","code":""},{"path":"/reference/sparseSTATIS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sparse STATIS — sparseSTATIS","text":"X Data matrix rows J columns. column.design Design vector indicating grouping columns. mfa.normalize Logical indicating whether normalize data MFA; defaults TRUE. sparse.Cmat Logical indicating whether C matrix (RV matrix) sparsified; defaults FALSE. sparse.grandX Logical indicating whether compromise sparsified; defaults TRUE. components.Cmat Number dimensions extract C matrix (RV matrix); defaults 0. components.grandX Number dimensions extract compromise; defaults 0. sparseOption \"variable\" \"subtable\" indicating sparsity option. center Logical numeric vector centering column X; passed scale. scale Logical numeric vector scaling column X; passed scale. tol Tolerance convergence criterion; defaults .Machine$double.eps. init.Cmat Initialization method Cmat; defaults \"eig\". init.grandX Initialization method grandX; defaults \"svd\". initLeft.grandX Initial values left side grandX; defaults NULL. initRight.grandX Initial values right side grandX; defaults NULL. seed Seed random number generation; defaults NULL. rdsLeft.Cmat Radii left side Cmat; defaults rep(1, components.Cmat). rdsRight.Cmat Radii right side Cmat; defaults rep(1, components.Cmat). rdsLeft.grandX Radii left side grandX; defaults rep(1, components.grandX). rdsRight.grandX Radii right side grandX; defaults rep(1, components.grandX). grp.Cmat Grouping vector Cmat; defaults NULL. grpLeft.grandX Grouping vector left side grandX; defaults NULL. grpRight.grandX Grouping vector right side grandX; defaults NULL. orthogonality.Cmat Type orthogonality constraint Cmat; defaults \"loadings\". OrthSpaceLeft.Cmat Orthogonal space left side Cmat; defaults NULL. OrthSpaceRight.Cmat Orthogonal space right side Cmat; defaults NULL. orthogonality.grandX Type orthogonality constraint grandX; defaults \"loadings\". OrthSpaceLeft.grandX Orthogonal space left side grandX; defaults NULL. OrthSpaceRight.grandX Orthogonal space right side grandX; defaults NULL. projPriority.Cmat Priority projection Cmat; defaults \"orth\". projPriorityLeft.Cmat Priority left projection Cmat; defaults projPriority.Cmat. projPriorityRight.Cmat Priority right projection Cmat; defaults projPriority.Cmat. projPriority.grandX Priority projection grandX; defaults \"orth\". projPriorityLeft.grandX Priority left projection grandX; defaults projPriority.grandX. projPriorityRight.Slus Priority right projection grandX; defaults projPriority.grandX. itermaxALS.Cmat Maximum number ALS iterations Cmat; defaults 1000. itermaxPOCS.Cmat Maximum number POCS iterations Cmat; defaults 1000. itermaxALS.grandX Maximum number ALS iterations grandX; defaults 1000. itermaxPOCS.grandX Maximum number POCS iterations grandX; defaults 1000. epsALS.Cmat Convergence criterion ALS Cmat; defaults 1e-10. epsPOCS.Cmat Convergence criterion POCS Cmat; defaults 1e-10. epsALS.grandX Convergence criterion ALS grandX; defaults 1e-10. epsPOCS.grandX Convergence criterion POCS grandX; defaults 1e-10.","code":""},{"path":"/reference/sparseSTATIS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sparse STATIS — sparseSTATIS","text":"Returns object containing results sparse STATIS analysis, including details C matrix (RV matrix), compromise, various parameters settings used analysis.","code":""},{"path":"/reference/sparseSTATIS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sparse STATIS — sparseSTATIS","text":"","code":"# Example usage of sparseSTATIS function # Assuming `X` is a data matrix and `column.design` is the design vector if (FALSE) result <- sparseSTATIS(X = X, column.design = column.design)"},{"path":"/reference/tab_disjonctif.html","id":null,"dir":"Reference","previous_headings":"","what":"Disjonctif table — tab_disjonctif","title":"Disjonctif table — tab_disjonctif","text":"Disjonctif table","code":""},{"path":"/reference/tab_disjonctif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Disjonctif table — tab_disjonctif","text":"","code":"tab_disjonctif(X)"},{"path":"/reference/tab_disjonctif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Disjonctif table — tab_disjonctif","text":"X data frame matrix factors","code":""},{"path":"/reference/tab_disjonctif.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Disjonctif table — tab_disjonctif","text":"Returns disjonctif table","code":""},{"path":"/reference/tab_disjonctif.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Disjonctif table — tab_disjonctif","text":"","code":"library(FactoMineR) data(tea) tea <- tea [, 1:8]  tab_disjonctif(tea) #>        breakfast.Not.breakfast breakfast.breakfast tea.time.Not.tea time #>   [1,]                       0                   1                     1 #>   [2,]                       0                   1                     1 #>   [3,]                       1                   0                     0 #>   [4,]                       1                   0                     1 #>   [5,]                       0                   1                     1 #>   [6,]                       1                   0                     1 #>   [7,]                       0                   1                     0 #>   [8,]                       1                   0                     0 #>   [9,]                       0                   1                     0 #>  [10,]                       0                   1                     1 #>  [11,]                       1                   0                     1 #>  [12,]                       0                   1                     1 #>  [13,]                       0                   1                     0 #>  [14,]                       0                   1                     1 #>  [15,]                       0                   1                     1 #>  [16,]                       0                   1                     0 #>  [17,]                       0                   1                     0 #>  [18,]                       0                   1                     0 #>  [19,]                       0                   1                     0 #>  [20,]                       1                   0                     0 #>  [21,]                       1                   0                     0 #>  [22,]                       0                   1                     1 #>  [23,]                       1                   0                     0 #>  [24,]                       0                   1                     1 #>  [25,]                       1                   0                     1 #>  [26,]                       0                   1                     1 #>  [27,]                       0                   1                     0 #>  [28,]                       0                   1                     0 #>  [29,]                       1                   0                     0 #>  [30,]                       0                   1                     0 #>  [31,]                       1                   0                     1 #>  [32,]                       0                   1                     0 #>  [33,]                       1                   0                     0 #>  [34,]                       1                   0                     0 #>  [35,]                       1                   0                     0 #>  [36,]                       0                   1                     1 #>  [37,]                       0                   1                     0 #>  [38,]                       0                   1                     1 #>  [39,]                       1                   0                     1 #>  [40,]                       1                   0                     0 #>  [41,]                       0                   1                     0 #>  [42,]                       0                   1                     0 #>  [43,]                       1                   0                     0 #>  [44,]                       0                   1                     0 #>  [45,]                       1                   0                     1 #>  [46,]                       0                   1                     0 #>  [47,]                       1                   0                     1 #>  [48,]                       1                   0                     1 #>  [49,]                       0                   1                     0 #>  [50,]                       0                   1                     0 #>  [51,]                       0                   1                     0 #>  [52,]                       1                   0                     0 #>  [53,]                       1                   0                     0 #>  [54,]                       1                   0                     0 #>  [55,]                       1                   0                     1 #>  [56,]                       1                   0                     0 #>  [57,]                       0                   1                     0 #>  [58,]                       0                   1                     1 #>  [59,]                       1                   0                     0 #>  [60,]                       0                   1                     0 #>  [61,]                       0                   1                     0 #>  [62,]                       0                   1                     0 #>        tea.time.tea time evening.Not.evening evening.evening lunch.Not.lunch #>   [1,]                 0                   1               0               1 #>   [2,]                 0                   1               0               1 #>   [3,]                 1                   0               1               1 #>   [4,]                 0                   1               0               1 #>   [5,]                 0                   0               1               1 #>   [6,]                 0                   1               0               1 #>   [7,]                 1                   1               0               1 #>   [8,]                 1                   0               1               1 #>   [9,]                 1                   1               0               1 #>  [10,]                 0                   0               1               1 #>  [11,]                 0                   0               1               1 #>  [12,]                 0                   0               1               1 #>  [13,]                 1                   1               0               1 #>  [14,]                 0                   1               0               1 #>  [15,]                 0                   1               0               1 #>  [16,]                 1                   1               0               1 #>  [17,]                 1                   0               1               1 #>  [18,]                 1                   1               0               1 #>  [19,]                 1                   0               1               0 #>  [20,]                 1                   1               0               0 #>  [21,]                 1                   1               0               1 #>  [22,]                 0                   1               0               1 #>  [23,]                 1                   1               0               1 #>  [24,]                 0                   1               0               1 #>  [25,]                 0                   1               0               1 #>  [26,]                 0                   0               1               1 #>  [27,]                 1                   1               0               1 #>  [28,]                 1                   0               1               0 #>  [29,]                 1                   1               0               1 #>  [30,]                 1                   1               0               1 #>  [31,]                 0                   1               0               1 #>  [32,]                 1                   1               0               1 #>  [33,]                 1                   1               0               1 #>  [34,]                 1                   1               0               1 #>  [35,]                 1                   0               1               1 #>  [36,]                 0                   1               0               1 #>  [37,]                 1                   1               0               1 #>  [38,]                 0                   1               0               1 #>  [39,]                 0                   1               0               1 #>  [40,]                 1                   1               0               1 #>  [41,]                 1                   1               0               0 #>  [42,]                 1                   1               0               1 #>  [43,]                 1                   1               0               1 #>  [44,]                 1                   1               0               1 #>  [45,]                 0                   0               1               1 #>  [46,]                 1                   1               0               1 #>  [47,]                 0                   0               1               1 #>  [48,]                 0                   1               0               1 #>  [49,]                 1                   1               0               1 #>  [50,]                 1                   1               0               1 #>  [51,]                 1                   1               0               1 #>  [52,]                 1                   0               1               1 #>  [53,]                 1                   1               0               1 #>  [54,]                 1                   0               1               1 #>  [55,]                 0                   0               1               1 #>  [56,]                 1                   0               1               1 #>  [57,]                 1                   1               0               1 #>  [58,]                 0                   0               1               1 #>  [59,]                 1                   1               0               0 #>  [60,]                 1                   1               0               0 #>  [61,]                 1                   1               0               0 #>  [62,]                 1                   0               1               0 #>        lunch.lunch dinner.Not.dinner dinner.dinner always.Not.always #>   [1,]           0                 1             0                 1 #>   [2,]           0                 1             0                 1 #>   [3,]           0                 0             1                 1 #>   [4,]           0                 0             1                 1 #>   [5,]           0                 1             0                 0 #>   [6,]           0                 0             1                 1 #>   [7,]           0                 1             0                 1 #>   [8,]           0                 1             0                 1 #>   [9,]           0                 1             0                 1 #>  [10,]           0                 1             0                 1 #>  [11,]           0                 1             0                 1 #>  [12,]           0                 1             0                 1 #>  [13,]           0                 1             0                 1 #>  [14,]           0                 1             0                 1 #>  [15,]           0                 1             0                 1 #>  [16,]           0                 1             0                 1 #>  [17,]           0                 1             0                 1 #>  [18,]           0                 1             0                 1 #>  [19,]           1                 1             0                 1 #>  [20,]           1                 1             0                 1 #>  [21,]           0                 1             0                 1 #>  [22,]           0                 1             0                 1 #>  [23,]           0                 1             0                 1 #>  [24,]           0                 1             0                 1 #>  [25,]           0                 1             0                 0 #>  [26,]           0                 1             0                 0 #>  [27,]           0                 1             0                 1 #>  [28,]           1                 1             0                 1 #>  [29,]           0                 1             0                 1 #>  [30,]           0                 1             0                 1 #>  [31,]           0                 1             0                 0 #>  [32,]           0                 1             0                 1 #>  [33,]           0                 1             0                 1 #>  [34,]           0                 1             0                 1 #>  [35,]           0                 1             0                 0 #>  [36,]           0                 1             0                 1 #>  [37,]           0                 1             0                 1 #>  [38,]           0                 1             0                 1 #>  [39,]           0                 1             0                 0 #>  [40,]           0                 1             0                 1 #>  [41,]           1                 1             0                 1 #>  [42,]           0                 1             0                 1 #>  [43,]           0                 1             0                 1 #>  [44,]           0                 1             0                 1 #>  [45,]           0                 1             0                 1 #>  [46,]           0                 1             0                 0 #>  [47,]           0                 0             1                 1 #>  [48,]           0                 1             0                 0 #>  [49,]           0                 1             0                 1 #>  [50,]           0                 1             0                 1 #>  [51,]           0                 1             0                 1 #>  [52,]           0                 1             0                 0 #>  [53,]           0                 1             0                 1 #>  [54,]           0                 0             1                 1 #>  [55,]           0                 1             0                 0 #>  [56,]           0                 1             0                 0 #>  [57,]           0                 1             0                 1 #>  [58,]           0                 1             0                 1 #>  [59,]           1                 1             0                 1 #>  [60,]           1                 1             0                 1 #>  [61,]           1                 1             0                 1 #>  [62,]           1                 1             0                 0 #>        always.always home.Not.home home.home work.Not.work work.work #>   [1,]             0             0         1             1         0 #>   [2,]             0             0         1             1         0 #>   [3,]             0             0         1             0         1 #>   [4,]             0             0         1             1         0 #>   [5,]             1             0         1             1         0 #>   [6,]             0             0         1             1         0 #>   [7,]             0             0         1             1         0 #>   [8,]             0             0         1             1         0 #>   [9,]             0             0         1             1         0 #>  [10,]             0             0         1             1         0 #>  [11,]             0             0         1             1         0 #>  [12,]             0             0         1             1         0 #>  [13,]             0             0         1             1         0 #>  [14,]             0             0         1             1         0 #>  [15,]             0             0         1             1         0 #>  [16,]             0             0         1             1         0 #>  [17,]             0             0         1             0         1 #>  [18,]             0             0         1             1         0 #>  [19,]             0             0         1             1         0 #>  [20,]             0             0         1             1         0 #>  [21,]             0             0         1             1         0 #>  [22,]             0             0         1             1         0 #>  [23,]             0             1         0             0         1 #>  [24,]             0             0         1             1         0 #>  [25,]             1             0         1             1         0 #>  [26,]             1             0         1             0         1 #>  [27,]             0             0         1             1         0 #>  [28,]             0             0         1             0         1 #>  [29,]             0             0         1             1         0 #>  [30,]             0             0         1             1         0 #>  [31,]             1             0         1             1         0 #>  [32,]             0             0         1             1         0 #>  [33,]             0             0         1             0         1 #>  [34,]             0             0         1             1         0 #>  [35,]             1             0         1             1         0 #>  [36,]             0             0         1             1         0 #>  [37,]             0             0         1             1         0 #>  [38,]             0             0         1             1         0 #>  [39,]             1             0         1             0         1 #>  [40,]             0             0         1             1         0 #>  [41,]             0             0         1             1         0 #>  [42,]             0             0         1             0         1 #>  [43,]             0             0         1             1         0 #>  [44,]             0             0         1             1         0 #>  [45,]             0             0         1             1         0 #>  [46,]             1             0         1             0         1 #>  [47,]             0             0         1             1         0 #>  [48,]             1             0         1             1         0 #>  [49,]             0             0         1             0         1 #>  [50,]             0             0         1             1         0 #>  [51,]             0             0         1             1         0 #>  [52,]             1             0         1             1         0 #>  [53,]             0             0         1             0         1 #>  [54,]             0             0         1             1         0 #>  [55,]             1             0         1             1         0 #>  [56,]             1             0         1             0         1 #>  [57,]             0             0         1             1         0 #>  [58,]             0             0         1             1         0 #>  [59,]             0             0         1             1         0 #>  [60,]             0             0         1             1         0 #>  [61,]             0             0         1             0         1 #>  [62,]             1             0         1             0         1 #>  [ reached getOption(\"max.print\") -- omitted 238 rows ]"}]
